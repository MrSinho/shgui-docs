<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="shgui_8h" kind="file" language="C++">
    <compoundname>shgui.h</compoundname>
    <includes local="no">shgui-shaders/shguiShaders.h</includes>
    <includes local="no">shvulkan/shVulkan.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="shgui-font_8h" local="no">D:/home/desktop/github/shgui/shgui/include/shgui/shgui-font.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h</label>
        <link refid="shgui_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>shgui-shaders/shguiShaders.h</label>
      </node>
      <node id="3">
        <label>shvulkan/shVulkan.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>D:/home/desktop/github/shgui/shgui/include/shgui/shgui-font.h</label>
        <link refid="shgui-font_8h"/>
      </node>
      <node id="1">
        <label>D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h</label>
        <link refid="shgui_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_sh_gui_core" prot="public">ShGuiCore</innerclass>
    <innerclass refid="struct_sh_gui_inputs" prot="public">ShGuiInputs</innerclass>
    <innerclass refid="structshguivec2" prot="public">shguivec2</innerclass>
    <innerclass refid="structshguivec3" prot="public">shguivec3</innerclass>
    <innerclass refid="structshguivec4" prot="public">shguivec4</innerclass>
    <innerclass refid="struct_sh_gui_region_raw" prot="public">ShGuiRegionRaw</innerclass>
    <innerclass refid="struct_sh_gui_region_infos" prot="public">ShGuiRegionInfos</innerclass>
    <innerclass refid="struct_sh_gui_char_raw" prot="public">ShGuiCharRaw</innerclass>
    <innerclass refid="struct_sh_gui_char_infos" prot="public">ShGuiCharInfos</innerclass>
    <innerclass refid="struct_sh_gui" prot="public">ShGui</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" prot="public" static="no">
        <name>SH_GUI_CALL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="20" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ae69f5ff88630435153622cab22fa49d9" prot="public" static="no">
        <name>shGuiError</name>
        <param><defname>condition</defname></param>
        <param><defname>error_msg</defname></param>
        <param><defname>failure_expression</defname></param>
        <initializer>	if ((int)(condition)) {\
		printf(&quot;shgui error: %s\n&quot;, (const char*)(error_msg));\
		failure_expression;\
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="38" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ac3ada90cbae19b201bc363a7289eb278" prot="public" static="no">
        <name>shGuiVkResultError</name>
        <param><defname>result</defname></param>
        <param><defname>error_msg</defname></param>
        <param><defname>failure_expression</defname></param>
        <initializer>	if ((VkResult)(result) != VK_SUCCESS) {\
		printf(&quot;shgui vulkan error: %s, %s\n&quot;, error_msg, shTranslateVkResult((VkResult)(result)));\
		failure_expression;\
	}</initializer>
        <briefdescription>
<para>Macro for checking Vulkan API call results and handling errors. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro is used to check the result of a Vulkan API call and handle any errors that occur. If the result is not VK_SUCCESS, it prints an error message along with the provided <computeroutput>error_msg</computeroutput> and the translated Vulkan result. Additionally, it executes the <computeroutput>failure_expression</computeroutput>, allowing for custom error handling code.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>The result code to be checked, typically returned by a Vulkan API call. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>A user-defined error message to be displayed in case of failure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>failure_expression</parametername>
</parameternamelist>
<parameterdescription>
<para>Custom code or action to be executed in case of failure. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="61" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" prot="public" static="no">
        <name>SH_GUI_STRUCTURE_ZERO</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="72" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ad963d28a02072b1a5f3a0ee531d25e1c" prot="public" static="no">
        <name>SH_GUI_KEY_LAST</name>
        <initializer>348</initializer>
        <briefdescription>
<para>The last valid key event code in the <computeroutput>shgui</computeroutput> library. </para>
        </briefdescription>
        <detaileddescription>
<para>This constant represents the highest valid key event code within the <computeroutput>shgui</computeroutput> library. Key event codes are typically used to identify and handle keyboard input in <computeroutput>shgui</computeroutput> applications. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="100" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a1abb4b4b5fcb9c2575a66e66f4611f94" prot="public" static="no">
        <name>SH_GUI_NO_KEY</name>
        <initializer>UINT8_MAX</initializer>
        <briefdescription>
<para>A constant representing the absence of a key event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="115" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a62230dab64005300af538ac7f5c2cee8" prot="public" static="no">
        <name>SH_GUI_VEC2_ZERO</name>
        <initializer>_SH_GUI_VEC2_ZERO</initializer>
        <briefdescription>
<para>Alias for <computeroutput>_SH_GUI_VEC2_ZERO</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="217" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a3db1e144da2d742bddb9f72e6f0ea82b" prot="public" static="no">
        <name>SH_GUI_VEC3_ZERO</name>
        <initializer>_SH_GUI_VEC3_ZERO</initializer>
        <briefdescription>
<para>Alias for <computeroutput>_SH_GUI_VEC3_ZERO</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="222" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a79e017d39157bd3bf919edede8883fac" prot="public" static="no">
        <name>SH_GUI_VEC4_ZERO</name>
        <initializer>_SH_GUI_VEC4_ZERO</initializer>
        <briefdescription>
<para>Alias for <computeroutput>_SH_GUI_VEC4_ZERO</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="227" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a55b882c68c1a5b8b7433d478ff6e31f8" prot="public" static="no">
        <name>SH_GUI_VEC2_COPY</name>
        <param><defname>dst</defname></param>
        <param><defname>src</defname></param>
        <initializer>(((dst).x = (src).x) &amp;&amp; ((dst).y = (src).y))</initializer>
        <briefdescription>
<para>Copy a 2D vector from source to destination. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="232" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1aba1d5152ca796c2e4922d02767010816" prot="public" static="no">
        <name>SH_GUI_VEC3_COPY</name>
        <param><defname>dst</defname></param>
        <param><defname>src</defname></param>
        <initializer>(((dst).x = (src).x) &amp;&amp; ((dst).y = (src).y) &amp;&amp; ((dst).z = (src).z))</initializer>
        <briefdescription>
<para>Copy a 3D vector from source to destination. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="237" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ac317ba09231b9edea68dac8ecb9efa38" prot="public" static="no">
        <name>SH_GUI_VEC4_COPY</name>
        <param><defname>dst</defname></param>
        <param><defname>src</defname></param>
        <initializer>(((dst).x = (src).x) &amp;&amp; ((dst).y = (src).y) &amp;&amp; ((dst).z = (src).z) &amp;&amp; ((dst).w = (src).w))</initializer>
        <briefdescription>
<para>Copy a 4D vector from source to destination. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="242" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1aca6d17443ff40992fef7c1fd56ffcbd0" prot="public" static="no">
        <name>SH_GUI_COLOR_BLACK</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 0.0f }</initializer>
        <briefdescription>
<para>Color constant representing black. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="247" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a611e881b86790f284171a9d5263b58d5" prot="public" static="no">
        <name>SH_GUI_COLOR_WHITE</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 1.0f, 1.0f, 1.0f, 1.0f }</initializer>
        <briefdescription>
<para>Color constant representing white. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="252" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a70f23061128777d2086ef87a5e8c3ec5" prot="public" static="no">
        <name>SH_GUI_COLOR_RED</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 1.0f, 0.0f, 0.0f, 1.0f }</initializer>
        <briefdescription>
<para>Color constant representing red. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="257" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a722f2981a79d63aa1df756db30c1706f" prot="public" static="no">
        <name>SH_GUI_COLOR_GREEN</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 0.0f, 1.0f, 0.0f, 1.0f }</initializer>
        <briefdescription>
<para>Color constant representing green. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="262" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a15a60674c2fc127127168fdcaddb4f57" prot="public" static="no">
        <name>SH_GUI_COLOR_BLUE</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 0.0f, 0.0f, 1.0f, 1.0f }</initializer>
        <briefdescription>
<para>Color constant representing blue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="267" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a48f355c4e30f9d009f01f6c307d0ea04" prot="public" static="no">
        <name>SH_GUI_COLOR_YELLOW</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 1.0f, 1.0f, 0.0f }</initializer>
        <briefdescription>
<para>Color constant representing yellow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="272" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ac4c02963bdf2762b7acad2a5a8d2ad99" prot="public" static="no">
        <name>SH_GUI_COLOR_CYAN</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 0.0f, 1.0f, 1.0f }</initializer>
        <briefdescription>
<para>Color constant representing cyan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="277" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ab637c8171a8ae93574f9348e367957ba" prot="public" static="no">
        <name>SH_GUI_COLOR_MAGENTA</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 1.0f, 0.0f, 1.0f }</initializer>
        <briefdescription>
<para>Color constant representing magenta. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="282" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a23250eff24457584cc8b8656becd20c7" prot="public" static="no">
        <name>SH_GUI_COLOR_GREY</name>
        <initializer>(<ref refid="structshguivec4" kindref="compound">shguivec4</ref>){ 0.5f, 0.5f, 0.5f }</initializer>
        <briefdescription>
<para>Color constant representing grey. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="287" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ae95364c1b8e15e44bfecc7f6ba0d44e7" prot="public" static="no">
        <name>SH_GUI_MAX_REGION_COUNT</name>
        <initializer>1024</initializer>
        <briefdescription>
<para>Maximum number of regions supported in a <computeroutput>shgui</computeroutput> application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="308" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a565639b02d4e3da35fb500cf20450cf4" prot="public" static="no">
        <name>SH_GUI_MAX_REGIONS_RAW_SIZE</name>
        <initializer>(<ref refid="shgui_8h_1ae95364c1b8e15e44bfecc7f6ba0d44e7" kindref="member">SH_GUI_MAX_REGION_COUNT</ref> * sizeof(<ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref>))</initializer>
        <briefdescription>
<para>Maximum size in bytes for raw region data in a <computeroutput>shgui</computeroutput> application. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="313" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a4a24f48248ddbd2bfefb10795c5cda9e" prot="public" static="no">
        <name>SH_GUI_MAX_CHAR_COUNT</name>
        <initializer>2048</initializer>
        <briefdescription>
<para>The maximum number of characters supported by the GUI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="387" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a072f09b6047aa85d165c13bb4302929b" prot="public" static="no">
        <name>SH_GUI_MAX_CHARS_RAW_SIZE</name>
        <initializer>(<ref refid="shgui_8h_1a4a24f48248ddbd2bfefb10795c5cda9e" kindref="member">SH_GUI_MAX_CHAR_COUNT</ref> * sizeof(<ref refid="struct_sh_gui_char_raw" kindref="compound">ShGuiCharRaw</ref>))</initializer>
        <briefdescription>
<para>The raw size (in bytes) required to store the maximum number of characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="392" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ab59f9ce6ba7e27aef4387426d7c2eb29" prot="public" static="no">
        <name>SH_GUI_MAX_CHARS_VERTEX_RAW_SIZE</name>
        <initializer>(<ref refid="shgui_8h_1a4a24f48248ddbd2bfefb10795c5cda9e" kindref="member">SH_GUI_MAX_CHAR_COUNT</ref> * sizeof(<ref refid="shgui_8h_1aa3c1dd28d77fc2ffc98e3ab08ba108cf" kindref="member">ShGuiCharVertexRaw</ref>))</initializer>
        <briefdescription>
<para>The raw size (in bytes) required to store the maximum number of character vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="397" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a93a3e3d7e1c9f5e0b4e7bf33ed312533" prot="public" static="no">
        <name>SH_GUI_CHAR_ROW_COUNT</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Number of rows in the <computeroutput>shgui</computeroutput> character grid. </para>
        </briefdescription>
        <detaileddescription>
<para>This constant defines the number of rows in the <computeroutput>shgui</computeroutput> character grid. It determines the vertical size of the grid used for rendering characters in <computeroutput>shgui</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="407" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1addd4fc144ef8c68df47101ac070b0554" prot="public" static="no">
        <name>SH_GUI_CHAR_COLUMN_COUNT</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Number of columns in the <computeroutput>shgui</computeroutput> character grid. </para>
        </briefdescription>
        <detaileddescription>
<para>This constant defines the number of columns in the <computeroutput>shgui</computeroutput> character grid. It determines the horizontal size of the grid used for rendering characters in <computeroutput>shgui</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="415" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a23fc6656fadda5b3736d035c107f5c8d" prot="public" static="no">
        <name>SH_GUI_MAX_CHAR_VERTEX_COUNT</name>
        <initializer>(<ref refid="shgui_8h_1a93a3e3d7e1c9f5e0b4e7bf33ed312533" kindref="member">SH_GUI_CHAR_ROW_COUNT</ref> * <ref refid="shgui_8h_1addd4fc144ef8c68df47101ac070b0554" kindref="member">SH_GUI_CHAR_COLUMN_COUNT</ref>)</initializer>
        <briefdescription>
<para>Maximum number of vertices required to render a character in a <computeroutput>shgui</computeroutput> application. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>SH_GUI_MAX_CHAR_VERTEX_COUNT</computeroutput> macro defines the maximum number of vertices required to render a character in a <computeroutput>shgui</computeroutput> application. It is calculated as 7x7 vertices, which corresponds to a 7x7 grid for character rendering. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="423" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a4b81cc241cba9d3054eb60a008f06fef" prot="public" static="no">
        <name>SH_GUI_MAX_CHAR_VERTEX_SIZE</name>
        <initializer>(<ref refid="shgui_8h_1a23fc6656fadda5b3736d035c107f5c8d" kindref="member">SH_GUI_MAX_CHAR_VERTEX_COUNT</ref> * 3 * 4)</initializer>
        <briefdescription>
<para>Maximum size in bytes required to store character vertex data in a <computeroutput>shgui</computeroutput> application. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>SH_GUI_MAX_CHAR_VERTEX_SIZE</computeroutput> macro defines the maximum size, in bytes, required to store character vertex data in a <computeroutput>shgui</computeroutput> application. It is calculated as the product of <ref refid="shgui_8h_1a23fc6656fadda5b3736d035c107f5c8d" kindref="member">SH_GUI_MAX_CHAR_VERTEX_COUNT</ref>, 3 components per vertex (x, y, z-priority), and 4 bytes per component. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="438" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1aeba98d2d9b495cf8ff34881773dae0a5" prot="public" static="no">
        <name>SH_GUI_NO_CHAR</name>
        <initializer>_SH_GUI_NO_CHAR</initializer>
        <briefdescription>
<para>Macro alias of _SH_GUI_NO_CHAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="448" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a5a144d14b096ced597d496ba7bd626e8" prot="public" static="no">
        <name>SH_GUI_SUPPORTED_CHAR_COUNT</name>
        <initializer>70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="451" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a3a8388255e3ce64dae017214d1884eea" prot="public" static="no">
        <name>SH_GUI_SUPPORTED_CHARS</name>
        <initializer>    &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;, &apos;g&apos;, &apos;h&apos;, &apos;i&apos;, &apos;j&apos;, &apos;k&apos;, &apos;l&apos;, &apos;m&apos;, &apos;n&apos;, &apos;o&apos;, &apos;p&apos;, &apos;q&apos;, &apos;r&apos;, &apos;s&apos;, &apos;t&apos;, &apos;u&apos;, &apos;v&apos;, &apos;w&apos;, &apos;x&apos;, &apos;y&apos;, &apos;z&apos;,\
    &apos;0&apos;, &apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos;, &apos;6&apos;, &apos;7&apos;, &apos;8&apos;, &apos;9&apos;,\
    &apos; &apos;, &apos;\t&apos;, &apos;\n&apos;,\
    &apos;.&apos;, &apos;,&apos;, &apos;!&apos;, &apos;?&apos;, &apos;:&apos;, &apos;;&apos;, &apos;/&apos;, &apos;\\&apos;, &apos;_&apos;, &apos;-&apos;, &apos;|&apos;, &apos;&amp;&apos;, &apos;%&apos;, &apos;$&apos;, &apos;#&apos;, &apos;@&apos;, &apos;\&apos;&apos;, &apos;&quot;&apos;, &apos;+&apos;, &apos;-&apos;, &apos;*&apos;, &apos;/&apos;, &apos;=&apos;, &apos;&lt;&apos;, &apos;&gt;&apos;, &apos;(&apos;, &apos;)&apos;, &apos;[&apos;, &apos;]&apos;, &apos;~&apos;, &apos;`&apos;\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="453" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a23f8f538ba75efc36f022a531aa6a2da" prot="public" static="no">
        <name>SH_GUI_LOAD_CHAR_VERTICES</name>
        <param><defname>dst</defname></param>
        <param><defname>src</defname></param>
        <initializer>    memcpy(dst, src, <ref refid="shgui_8h_1a4b81cc241cba9d3054eb60a008f06fef" kindref="member">SH_GUI_MAX_CHAR_VERTEX_SIZE</ref>)</initializer>
        <briefdescription>
<para>Macro used to copy GUI character vertices from a source memory block to a destination. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination array where character vertices will be copied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source array containing the original character vertices. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="471" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="471" bodyend="472"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a4d2120caffad9ee1bf811a19eea37269" prot="public" static="no">
        <name>SH_GUI_REGIONS_RAW_STAGING_SIZE</name>
        <initializer><ref refid="shgui_8h_1a565639b02d4e3da35fb500cf20450cf4" kindref="member">SH_GUI_MAX_REGIONS_RAW_SIZE</ref></initializer>
        <briefdescription>
<para>The raw staging size (in bytes) for regions, equivalent to <ref refid="shgui_8h_1a565639b02d4e3da35fb500cf20450cf4" kindref="member">SH_GUI_MAX_REGIONS_RAW_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="494" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a51010a400aa770864d114abfb8b41622" prot="public" static="no">
        <name>SH_GUI_CHARS_RAW_STAGING_SIZE</name>
        <initializer><ref refid="shgui_8h_1a072f09b6047aa85d165c13bb4302929b" kindref="member">SH_GUI_MAX_CHARS_RAW_SIZE</ref></initializer>
        <briefdescription>
<para>The raw staging size (in bytes) for characters, equivalent to <ref refid="shgui_8h_1a072f09b6047aa85d165c13bb4302929b" kindref="member">SH_GUI_MAX_CHARS_RAW_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="499" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ae080d7a135d5a7fb3a1715100d3bfc94" prot="public" static="no">
        <name>SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE</name>
        <initializer><ref refid="shgui_8h_1ab59f9ce6ba7e27aef4387426d7c2eb29" kindref="member">SH_GUI_MAX_CHARS_VERTEX_RAW_SIZE</ref></initializer>
        <briefdescription>
<para>The raw staging size (in bytes) for character vertices, equivalent to <ref refid="shgui_8h_1ab59f9ce6ba7e27aef4387426d7c2eb29" kindref="member">SH_GUI_MAX_CHARS_VERTEX_RAW_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="504" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a0b457acfb16d67f1958108ccaeed794a" prot="public" static="no">
        <name>SH_GUI_REGIONS_RAW_STAGING_OFFSET</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>The offset for raw staging regions, set to 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="509" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ab4dc7edb3d20d76a9ed5177590e5c732" prot="public" static="no">
        <name>SH_GUI_CHARS_RAW_STAGING_OFFSET</name>
        <initializer>(<ref refid="shgui_8h_1a0b457acfb16d67f1958108ccaeed794a" kindref="member">SH_GUI_REGIONS_RAW_STAGING_OFFSET</ref> + <ref refid="shgui_8h_1a4d2120caffad9ee1bf811a19eea37269" kindref="member">SH_GUI_REGIONS_RAW_STAGING_SIZE</ref>)</initializer>
        <briefdescription>
<para>The offset for raw staging characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="514" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a05a9021eff100711687616a85c3f29fa" prot="public" static="no">
        <name>SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET</name>
        <initializer>(<ref refid="shgui_8h_1ab4dc7edb3d20d76a9ed5177590e5c732" kindref="member">SH_GUI_CHARS_RAW_STAGING_OFFSET</ref> + <ref refid="shgui_8h_1a51010a400aa770864d114abfb8b41622" kindref="member">SH_GUI_CHARS_RAW_STAGING_SIZE</ref>)</initializer>
        <briefdescription>
<para>The offset for raw staging character vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="519" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1aeeb883db8b5c074015f5b485669d8e6f" prot="public" static="no">
        <name>SH_GUI_STAGING_BUFFER_SIZE</name>
        <initializer>(<ref refid="shgui_8h_1a05a9021eff100711687616a85c3f29fa" kindref="member">SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET</ref> + <ref refid="shgui_8h_1ae080d7a135d5a7fb3a1715100d3bfc94" kindref="member">SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE</ref>)</initializer>
        <briefdescription>
<para>The total size of the staging buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="524" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1af1ac2e0d8095dc6e55b9450c5ce41e70" prot="public" static="no">
        <name>SH_GUI_REGIONS_RAW_DST_SIZE</name>
        <initializer><ref refid="shgui_8h_1a4d2120caffad9ee1bf811a19eea37269" kindref="member">SH_GUI_REGIONS_RAW_STAGING_SIZE</ref></initializer>
        <briefdescription>
<para>The raw size (in bytes) for destination regions, equivalent to <ref refid="shgui_8h_1a4d2120caffad9ee1bf811a19eea37269" kindref="member">SH_GUI_REGIONS_RAW_STAGING_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="529" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a0e1ca97b166bf10f245f217cb71d4880" prot="public" static="no">
        <name>SH_GUI_CHARS_RAW_DST_SIZE</name>
        <initializer><ref refid="shgui_8h_1a51010a400aa770864d114abfb8b41622" kindref="member">SH_GUI_CHARS_RAW_STAGING_SIZE</ref></initializer>
        <briefdescription>
<para>The raw size (in bytes) for destination characters, equivalent to <ref refid="shgui_8h_1a51010a400aa770864d114abfb8b41622" kindref="member">SH_GUI_CHARS_RAW_STAGING_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="534" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1adeaac58689f60e3eb9a1cf54d2e8741f" prot="public" static="no">
        <name>SH_GUI_CHARS_VERTEX_RAW_DST_SIZE</name>
        <initializer><ref refid="shgui_8h_1ae080d7a135d5a7fb3a1715100d3bfc94" kindref="member">SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE</ref></initializer>
        <briefdescription>
<para>The raw size (in bytes) for destination character vertices, equivalent to <ref refid="shgui_8h_1ae080d7a135d5a7fb3a1715100d3bfc94" kindref="member">SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="539" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a8182f6a14fda93b2449fae73300c869e" prot="public" static="no">
        <name>SH_GUI_REGIONS_RAW_DST_OFFSET</name>
        <initializer><ref refid="shgui_8h_1a0b457acfb16d67f1958108ccaeed794a" kindref="member">SH_GUI_REGIONS_RAW_STAGING_OFFSET</ref></initializer>
        <briefdescription>
<para>The offset for destination regions, equivalent to <ref refid="shgui_8h_1a0b457acfb16d67f1958108ccaeed794a" kindref="member">SH_GUI_REGIONS_RAW_STAGING_OFFSET</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="544" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a32f7d19d19f644fb0a1086b3c550c060" prot="public" static="no">
        <name>SH_GUI_CHARS_RAW_DST_OFFSET</name>
        <initializer><ref refid="shgui_8h_1ab4dc7edb3d20d76a9ed5177590e5c732" kindref="member">SH_GUI_CHARS_RAW_STAGING_OFFSET</ref></initializer>
        <briefdescription>
<para>The offset for destination characters, equivalent to <ref refid="shgui_8h_1ab4dc7edb3d20d76a9ed5177590e5c732" kindref="member">SH_GUI_CHARS_RAW_STAGING_OFFSET</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="549" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ae56939ade6a21a28edd6df0bbd386b63" prot="public" static="no">
        <name>SH_GUI_CHARS_VERTEX_RAW_DST_OFFSET</name>
        <initializer><ref refid="shgui_8h_1a05a9021eff100711687616a85c3f29fa" kindref="member">SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET</ref></initializer>
        <briefdescription>
<para>The offset for destination character vertices, equivalent to <ref refid="shgui_8h_1a05a9021eff100711687616a85c3f29fa" kindref="member">SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="554" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a30dc21da6c2d11829d996525f16dac56" prot="public" static="no">
        <name>SH_GUI_DST_BUFFER_SIZE</name>
        <initializer><ref refid="shgui_8h_1aeeb883db8b5c074015f5b485669d8e6f" kindref="member">SH_GUI_STAGING_BUFFER_SIZE</ref></initializer>
        <briefdescription>
<para>The total size of the destination buffer, equivalent to <ref refid="shgui_8h_1aeeb883db8b5c074015f5b485669d8e6f" kindref="member">SH_GUI_STAGING_BUFFER_SIZE</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="559" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a5add4b3d38279d526203c19f339e142c" prot="public" static="no">
        <name>SH_GUI_REGION_VERT_SPV</name>
        <initializer>_SH_GUI_REGION_VERT_SPV</initializer>
        <briefdescription>
<para>Macro representing the SPIR-V code for the GUI region vertex shader. It is defined as the corresponding static constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="566" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a90511a3863b7b0c61f89aaace28ef5d2" prot="public" static="no">
        <name>SH_GUI_REGION_FRAG_SPV</name>
        <initializer>_SH_GUI_REGION_FRAG_SPV</initializer>
        <briefdescription>
<para>Macro representing the SPIR-V code for the GUI region fragment shader. It is defined as the corresponding static constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="571" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a3b42506a62dfaf655b853d1911d9e79f" prot="public" static="no">
        <name>SH_GUI_CHAR_VERT_SPV</name>
        <initializer>_SH_GUI_CHAR_VERT_SPV</initializer>
        <briefdescription>
<para>Macro representing the SPIR-V code for the GUI character vertex shader. It is defined as the corresponding static constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="576" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1ae22f14c985c200aecb8bc508fca51ff3" prot="public" static="no">
        <name>SH_GUI_CHAR_FRAG_SPV</name>
        <initializer>_SH_GUI_CHAR_FRAG_SPV</initializer>
        <briefdescription>
<para>Macro representing the SPIR-V code for the GUI character fragment shader. It is defined as the corresponding static constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="581" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1aedae4a024a7e3481cebc0312408abb8e" prot="public" static="no">
        <name>shAllocateGui</name>
        <param></param>
        <initializer>((<ref refid="struct_sh_gui" kindref="compound">ShGui</ref>*)calloc(1, sizeof(<ref refid="struct_sh_gui" kindref="compound">ShGui</ref>)))</initializer>
        <briefdescription>
<para>Allocates memory for an instance of the <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the newly allocated instance of the <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="615" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1abe9560f976468057080c78dedbbbba3b" prot="public" static="no">
        <name>SH_GUI_TEXT_Z_PRIORITY</name>
        <initializer>0.0001f</initializer>
        <briefdescription>
<para>The z-priority for text elements in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro defines the z-priority for text elements in the GUI, which determines their rendering order. Smaller values indicate elements that should be rendered closer to the viewer, and have a higher priority over other UI elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="880" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a4024073423f80863499398090326fe37" prot="public" static="no">
        <name>SH_GUI_REGION_Z_PRIORITY</name>
        <initializer>0.0002f</initializer>
        <briefdescription>
<para>The z-priority for region elements in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro defines the z-priority for region elements in the GUI, which determines their rendering order. Smaller values indicate elements that should be rendered closer to the viewer, and have a higher priority over other UI elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="889" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="shgui_8h_1a6b332f2d20ddd14e85853b5c4a7569d1" prot="public" static="no">
        <name>SH_GUI_OUT_OF_CANVAS_Z_PRIORITY</name>
        <initializer>1.0f</initializer>
        <briefdescription>
<para>Z-axis priority value for out-of-canvas <computeroutput>shgui</computeroutput> elements. </para>
        </briefdescription>
        <detaileddescription>
<para>This constant defines the Z-axis priority value assigned to <computeroutput>shgui</computeroutput> elements that are positioned outside the visible canvas. It is used to determine the rendering order and priority for elements that extend beyond the canvas boundaries along the Z-axis.</para>
<para>The higher the Z-axis priority value, the more emphasis will be given to rendering these out-of-canvas elements. Adjust this value to control the rendering behavior of elements positioned outside the visible canvas along the Z-axis. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="901" column="9" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="901" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3" prot="public" static="no" strong="no">
        <type></type>
        <name>ShGuiInputFlags</name>
        <enumvalue id="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3af8d40427f0326bedeb943b90dc622eb0" prot="public">
          <name>SH_GUI_CLICK_ONCE</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Single click event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3abfbab7d756c4fac1ea3f92a5e841d3fe" prot="public">
          <name>SH_GUI_CLICK_REPEAT</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Repeated click event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3af664c8041c3d24b5604a193b2282f00a" prot="public">
          <name>SH_GUI_PRESS_ONCE</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Single press event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3ad804a40f55809cfa67fa24f0a141c8ee" prot="public">
          <name>SH_GUI_PRESS_REPEAT</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Repeated press event. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3ab874bc2fc9b5124c263bb102b7c8f8ef" prot="public">
          <name>SH_GUI_PRESS_MAX_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value for enumeration boundary checking. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for <computeroutput>shgui</computeroutput> input handling. These flags help control how input events, such as clicks and key presses, are processed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="131" column="1" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="131" bodyend="137"/>
      </memberdef>
      <memberdef kind="enum" id="shgui_8h_1ac996ab68bd7341e072f730a374011d19" prot="public" static="no" strong="no">
        <type></type>
        <name>ShGuiRegionRawWriteFlags</name>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a4d6854d7a3d46d51c256de64e15d6223" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No raw write operation. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a81fd36e3498189e4e124583163fb93fd" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_X_POSITION</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the X-position property of a <computeroutput>shgui</computeroutput> region. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a67c7a0e523307e4a27ba1b5e01307726" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_Y_POSITION</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the Y-position property of a <computeroutput>shgui</computeroutput> region. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19ab2ca7600c471fb005eb804cdd6d6652c" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_POSITION</name>
          <initializer>= SH_GUI_REGION_RAW_WRITE_X_POSITION | SH_GUI_REGION_RAW_WRITE_Y_POSITION</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write both X and Y positions of a <computeroutput>shgui</computeroutput> region. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19adaad5af443895eff55175bae9e17bee4" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_X_SCALE</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the X-scale property of a <computeroutput>shgui</computeroutput> region. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a498b627339d14f9cb1215168bceeea9e" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_Y_SCALE</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the Y-scale property of a <computeroutput>shgui</computeroutput> region. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19adafa7386556c1602147e0a07137a8c14" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_SCALE</name>
          <initializer>= SH_GUI_REGION_RAW_WRITE_X_SCALE | SH_GUI_REGION_RAW_WRITE_Y_SCALE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write both X and Y scales of a <computeroutput>shgui</computeroutput> region. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19ac0f29acb7830f62d7f469a22963a4af8" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_COLOR</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the color property of a <computeroutput>shgui</computeroutput> region. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a3578004f696e846666ff02ed16b42aad" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_EDGE_COLOR</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the edge color property of a <computeroutput>shgui</computeroutput> region. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a84a8952c8d7cc8a469bf3372e0c4eb0c" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_Z_PRIORITY</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the Z-priority property of a <computeroutput>shgui</computeroutput> region. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1ac996ab68bd7341e072f730a374011d19a78f3e6a6eebd07ec6b77c89bed78bf4d" prot="public">
          <name>SH_GUI_REGION_RAW_WRITE_MAX_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value for enumeration boundary checking. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for specifying raw write operations on <computeroutput>shgui</computeroutput> regions. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>ShGuiRegionRawWriteFlags</computeroutput> enumeration defines a set of flags used to specify raw write operations on <computeroutput>shgui</computeroutput> regions. These flags indicate which properties of a region should be updated during the write operation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="323" column="1" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="323" bodyend="335"/>
      </memberdef>
      <memberdef kind="enum" id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" prot="public" static="no" strong="no">
        <type></type>
        <name>ShGuiCharRawWriteFlags</name>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a9e8780c0f1d6e15910d64fe05263fc1d" prot="public">
          <name>SH_GUI_CHAR_RAW_WRITE_X_POSITION</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite the X position of the character. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae3a40be9a1c9b8281e4e60c328dae912" prot="public">
          <name>SH_GUI_CHAR_RAW_WRITE_Y_POSITION</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite the Y position of the character. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a3476f71408522d535badffbf06231941" prot="public">
          <name>SH_GUI_CHAR_RAW_WRITE_POSITION</name>
          <initializer>= SH_GUI_CHAR_RAW_WRITE_X_POSITION | SH_GUI_CHAR_RAW_WRITE_Y_POSITION</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite both X and Y positions of the character. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae854485dbedc8fee33d5c59160111852" prot="public">
          <name>SH_GUI_CHAR_RAW_WRITE_SCALE</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite the scale of the character. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a70247ed1143359ecb83b6d3233eb08ec" prot="public">
          <name>SH_GUI_CHAR_RAW_WRITE_Z_PRIORITY</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite the priority of the character. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04aba76a553ca82aa925d81453fbe51a3f4" prot="public">
          <name>SH_GUI_CHAR_RAW_WRITE_COLOR</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Overwrite the color of the character. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a8afb17a1593f3f2146c568f8050dd1a7" prot="public">
          <name>SH_GUI_CHAR_RAW_MAX_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value for enumeration boundary checking. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for specifying raw write operations on <computeroutput>shgui</computeroutput> characters. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>ShGuiCharRawWriteFlags</computeroutput> enumeration defines a set of flags used to specify raw write operations on <computeroutput>shgui</computeroutput> characters. These flags indicate which properties of a character should be updated during the write operation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="374" column="1" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="374" bodyend="382"/>
      </memberdef>
      <memberdef kind="enum" id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01" prot="public" static="no" strong="no">
        <type></type>
        <name>ShGuiWidgetFlags</name>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a904273812b5ee5576c4a0d9db53e0a70" prot="public">
          <name>SH_GUI_CENTER_WIDTH</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Center the widget horizontally. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01afb648a930c3598a8f4f28379278d3f7b" prot="public">
          <name>SH_GUI_CENTER_HEIGHT</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Center the widget vertically. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a873924271d75cf44e6115deae23155a6" prot="public">
          <name>SH_GUI_EDGE_LEFT</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Place the widget at the left edge. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01aae3169438dda6cd814f2996026d7ed75" prot="public">
          <name>SH_GUI_EDGE_RIGHT</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Place the widget at the right edge. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a0e0f828dbf352a4da6085454fe025224" prot="public">
          <name>SH_GUI_EDGE_TOP</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Place the widget at the top edge. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a5041f5efe1cf9841ae249621d8508332" prot="public">
          <name>SH_GUI_EDGE_BOTTOM</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Place the widget at the bottom edge. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01ac782c5b6d1a8a7e1b5ddde85eb2d0eca" prot="public">
          <name>SH_GUI_PIXELS</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specify widget dimensions in pixels. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a4830e45ad979bd2f6310728db43aa2eb" prot="public">
          <name>SH_GUI_RELATIVE</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specify widget dimensions as relative percentages. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a4c95d55530f2d0f89762ae63974932a3" prot="public">
          <name>SH_GUI_WIDGET_FLAGS_MAX_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value for enumeration boundary checking. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents different flags that can be used to configure a GUI widget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="846" column="1" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="846" bodyend="856"/>
      </memberdef>
      <memberdef kind="enum" id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6" prot="public" static="no" strong="no">
        <type></type>
        <name>ShGuiWriteFlags</name>
        <enumvalue id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6aa83c903abb74c0aab72c803734acbc8d" prot="public">
          <name>SH_GUI_WIDTH</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the width property of a GUI element. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6af99a77a1825406ae93ab75ab6badfe69" prot="public">
          <name>SH_GUI_HEIGHT</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the height property of a GUI element. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6a1e084ce7a8a4c7ff50c92323887a435b" prot="public">
          <name>SH_GUI_POSITION_X</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the X-coordinate property of a GUI element. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6a8df2922571a7a90591a33e6efbb99bca" prot="public">
          <name>SH_GUI_POSITION_Y</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the Y-coordinate property of a GUI element. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6acbe072a8aac1484a75910622fac8e4e8" prot="public">
          <name>SH_GUI_TITLE</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write the title property of a GUI element. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6a711eab33fb56908b4df8b8e69d205413" prot="public">
          <name>SH_GUI_WRITE_FLAGS_MAX_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum value for enumeration boundary checking. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents different flags for writing specific properties of a GUI element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="862" column="1" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="862" bodyend="869"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="shgui_8h_1ae77d0043e2676ab820d239d91e7dae1a" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui_core" kindref="compound">ShGuiCore</ref></type>
        <definition>typedef struct ShGuiCore ShGuiCore</definition>
        <argsstring></argsstring>
        <name>ShGuiCore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="91" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1ad78ef9e1fbfea483c389d7d42d67711d" prot="public" static="no">
        <type>int8_t</type>
        <definition>ShGuiKeyEvents</definition>
        <argsstring>[SH_GUI_KEY_LAST+1]</argsstring>
        <name>ShGuiKeyEvents</name>
        <briefdescription>
<para>A memory block to represent and store <computeroutput>shgui</computeroutput> key events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="108" column="16" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1aac42692bf846c31d71b89bd5e89c30a1" prot="public" static="no">
        <type>uint32_t</type>
        <definition>ShGui_UTF32_Char</definition>
        <argsstring></argsstring>
        <name>ShGui_UTF32_Char</name>
        <briefdescription>
<para>Represents a Unicode character encoded in UTF-32 format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="123" column="18" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a63f54c0b2ea2bc30c91e6be01a8fea35" prot="public" static="no">
        <type>enum <ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3" kindref="member">ShGuiInputFlags</ref></type>
        <definition>typedef enum ShGuiInputFlags ShGuiInputFlags</definition>
        <argsstring></argsstring>
        <name>ShGuiInputFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="137" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1af21e9a483acf02a77d02f08cd1084c84" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui_inputs" kindref="compound">ShGuiInputs</ref></type>
        <definition>typedef struct ShGuiInputs ShGuiInputs</definition>
        <argsstring></argsstring>
        <name>ShGuiInputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="153" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a6a1a2772493e3ff07a1a3306e35e97a2" prot="public" static="no">
        <type>struct <ref refid="structshguivec2" kindref="compound">shguivec2</ref></type>
        <definition>typedef struct shguivec2 shguivec2</definition>
        <argsstring></argsstring>
        <name>shguivec2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="166" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a7e880e06ee42933ee84088a80ba2857f" prot="public" static="no">
        <type>struct <ref refid="structshguivec3" kindref="compound">shguivec3</ref></type>
        <definition>typedef struct shguivec3 shguivec3</definition>
        <argsstring></argsstring>
        <name>shguivec3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="178" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a325fd2d177d0b82638f95c846a4ba7de" prot="public" static="no">
        <type>struct <ref refid="structshguivec4" kindref="compound">shguivec4</ref></type>
        <definition>typedef struct shguivec4 shguivec4</definition>
        <argsstring></argsstring>
        <name>shguivec4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="191" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a96c05f2c7427b930eacca0119e26e795" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref></type>
        <definition>typedef struct ShGuiRegionRaw ShGuiRegionRaw</definition>
        <argsstring></argsstring>
        <name>ShGuiRegionRaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="303" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a7168e22037da7048c6520e85cf695924" prot="public" static="no">
        <type>enum <ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref></type>
        <definition>typedef enum ShGuiRegionRawWriteFlags ShGuiRegionRawWriteFlags</definition>
        <argsstring></argsstring>
        <name>ShGuiRegionRawWriteFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="335" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a74d6ac4ba6233a68cec9549680c8e054" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui_region_infos" kindref="compound">ShGuiRegionInfos</ref></type>
        <definition>typedef struct ShGuiRegionInfos ShGuiRegionInfos</definition>
        <argsstring></argsstring>
        <name>ShGuiRegionInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="351" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a6e5869407d043aad59e8fe5673bbca3d" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui_char_raw" kindref="compound">ShGuiCharRaw</ref></type>
        <definition>typedef struct ShGuiCharRaw ShGuiCharRaw</definition>
        <argsstring></argsstring>
        <name>ShGuiCharRaw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="366" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1af4cfc284383305f901dab9e31bb6ad6f" prot="public" static="no">
        <type>enum <ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref></type>
        <definition>typedef enum ShGuiCharRawWriteFlags ShGuiCharRawWriteFlags</definition>
        <argsstring></argsstring>
        <name>ShGuiCharRawWriteFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="382" column="24"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1aa3c1dd28d77fc2ffc98e3ab08ba108cf" prot="public" static="no">
        <type>float</type>
        <definition>ShGuiCharVertexRaw</definition>
        <argsstring>[SH_GUI_MAX_CHAR_VERTEX_COUNT *3]</argsstring>
        <name>ShGuiCharVertexRaw</name>
        <briefdescription>
<para>Type for storing raw character vertex data in a <computeroutput>shgui</computeroutput> application. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>ShGuiCharVertexRaw</computeroutput> type is used to store raw character vertex data in a <computeroutput>shgui</computeroutput> application. It is a memory block of float values with a size corresponding to the maximum character vertex count. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="431" column="15" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a9df9a648db55fa01ce26e2fc81028da1" prot="public" static="no">
        <type>float</type>
        <definition>typedef float ShGuiCharMesh[49]</definition>
        <argsstring>[49]</argsstring>
        <name>ShGuiCharMesh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="461" column="15" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a62b381c08e8fbe7467ac8b05bd572290" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui_char_infos" kindref="compound">ShGuiCharInfos</ref></type>
        <definition>typedef struct ShGuiCharInfos ShGuiCharInfos</definition>
        <argsstring></argsstring>
        <name>ShGuiCharInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="487" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a00e46b1be1415e620c0379b7183a2fe6" prot="public" static="no">
        <type>struct <ref refid="struct_sh_gui" kindref="compound">ShGui</ref></type>
        <definition>typedef struct ShGui ShGui</definition>
        <argsstring></argsstring>
        <name>ShGui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="607" column="7"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a971ccf12b1eb4b7f32036f6601f02dca" prot="public" static="no">
        <type>enum <ref refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01" kindref="member">ShGuiWidgetFlags</ref></type>
        <definition>typedef enum ShGuiWidgetFlags ShGuiWidgetFlags</definition>
        <argsstring></argsstring>
        <name>ShGuiWidgetFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="856" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="shgui_8h_1a55db8d32791f0fa2a0f1988f4cac5721" prot="public" static="no">
        <type>enum <ref refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6" kindref="member">ShGuiWriteFlags</ref></type>
        <definition>typedef enum ShGuiWriteFlags ShGuiWriteFlags</definition>
        <argsstring></argsstring>
        <name>ShGuiWriteFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="869" column="17"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="shgui_8h_1a977bf7da5ed6526ba80b310c89a8d431" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structshguivec2" kindref="compound">shguivec2</ref></type>
        <definition>_SH_GUI_VEC2_ZERO</definition>
        <argsstring></argsstring>
        <name>_SH_GUI_VEC2_ZERO</name>
        <initializer>= <ref refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" kindref="member">SH_GUI_STRUCTURE_ZERO</ref></initializer>
        <briefdescription>
<para>Zero-initialized 2D vector constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="200" column="24" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shgui_8h_1afad9d471d3783cc344d22f2689d5dacc" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structshguivec3" kindref="compound">shguivec3</ref></type>
        <definition>_SH_GUI_VEC3_ZERO</definition>
        <argsstring></argsstring>
        <name>_SH_GUI_VEC3_ZERO</name>
        <initializer>= <ref refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" kindref="member">SH_GUI_STRUCTURE_ZERO</ref></initializer>
        <briefdescription>
<para>Zero-initialized 3D vector constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="206" column="24" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shgui_8h_1a03014d539109e727a89b345664be9bf2" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structshguivec4" kindref="compound">shguivec4</ref></type>
        <definition>_SH_GUI_VEC4_ZERO</definition>
        <argsstring></argsstring>
        <name>_SH_GUI_VEC4_ZERO</name>
        <initializer>= <ref refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" kindref="member">SH_GUI_STRUCTURE_ZERO</ref></initializer>
        <briefdescription>
<para>Zero-initialized 4D vector constant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="212" column="24" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="shgui_8h_1acce804a708c1e974d3d8943f5348cd15" prot="public" static="yes" mutable="no">
        <type>const <ref refid="shgui_8h_1aa3c1dd28d77fc2ffc98e3ab08ba108cf" kindref="member">ShGuiCharVertexRaw</ref></type>
        <definition>const ShGuiCharVertexRaw _SH_GUI_NO_CHAR</definition>
        <argsstring></argsstring>
        <name>_SH_GUI_NO_CHAR</name>
        <initializer>= { 0xbf800000 }</initializer>
        <briefdescription>
<para>A static constant representing a blank GUI character vertex raw data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="443" column="33" bodyfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" bodystart="443" bodyend="443"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="shgui_8h_1a6a143e521310c18566214bd5979a81e1" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t shGuiInit</definition>
        <argsstring>(ShGui *p_gui, ShGuiCore core)</argsstring>
        <name>shGuiInit</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type><ref refid="struct_sh_gui_core" kindref="compound">ShGuiCore</ref></type>
          <declname>core</declname>
        </param>
        <briefdescription>
<para>Initializes the GUI with the provided <computeroutput><ref refid="struct_sh_gui_core" kindref="compound">ShGuiCore</ref></computeroutput> structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>core</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid <ref refid="struct_sh_gui_core" kindref="compound">ShGuiCore</ref> structure containing information about the GUI core components.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="627" column="16" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="627" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a52453bea0f771d063f9eff32311158ee" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t shGuiSetSurface</definition>
        <argsstring>(ShGui *p_gui, VkSurfaceKHR surface)</argsstring>
        <name>shGuiSetSurface</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>VkSurfaceKHR</type>
          <declname>surface</declname>
        </param>
        <briefdescription>
<para>Sets the Vulkan surface for the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid Vulkan surface handle, see the Vulkan API documentation for more details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="640" column="16" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="640" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1ac4149238a0577b942b1ded2c2703ddf9" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t shGuiSetRenderpass</definition>
        <argsstring>(ShGui *p_gui, VkRenderPass renderpass)</argsstring>
        <name>shGuiSetRenderpass</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>VkRenderPass</type>
          <declname>renderpass</declname>
        </param>
        <briefdescription>
<para>Sets the Vulkan render pass for the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>renderpass</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid Vulkan render pass handle, see the Vulkan API documentation for more details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="653" column="16" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="653" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1af9ebb886cfa8e01160dd1c093ef3df26" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint32_t SH_GUI_CALL shGuiGetAvailableHeap</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiGetAvailableHeap</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Returns the available heap size for allocating memory, taking in consideration the host heap memory (RAM) and the GPU heap memory (VRAM). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The available heap size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="665" column="29" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="665" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1abd1993e44d2cf04573e66cfd02a98fb8" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiAllocateMemory</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiAllocateMemory</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Allocates memory for the GUI components. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="676" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="676" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1ae479c4197e09fecd279f1d16438e4391" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *<ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>char *SH_GUI_CALL shGuiReadBinary</definition>
        <argsstring>(const char *path, uint32_t *p_code_size)</argsstring>
        <name>shGuiReadBinary</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_code_size</declname>
        </param>
        <briefdescription>
<para>Reads a binary file and returns the binary data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the binary file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_code_size</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a variable to store the size of the binary file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The binary data located in a heap-allocated block. Needs to be freed after usage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="688" column="25" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="688" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a33cbc466e9e476bbb573e99ca814cda8" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiAllocatePipelineResources</definition>
        <argsstring>(ShGui *p_gui, uint32_t swapchain_image_count)</argsstring>
        <name>shGuiAllocatePipelineResources</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>swapchain_image_count</declname>
        </param>
        <briefdescription>
<para>Allocates resources for the GUI pipelines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>swapchain_image_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of swapchain images.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="701" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="701" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1af66d73a5b488af9c0941e06386891461" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiBuildRegionPipeline</definition>
        <argsstring>(ShGui *p_gui, const char *vertex_shader_path, const char *fragment_shader_path)</argsstring>
        <name>shGuiBuildRegionPipeline</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vertex_shader_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fragment_shader_path</declname>
        </param>
        <briefdescription>
<para>Builds the region pipeline using the provided vertex and fragment shader paths. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_shader_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the vertex shader file in the spv file format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_shader_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the fragment shader file in the spv file format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="715" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="715" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a98b278cecd8af517d5ae05406d3e61de" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiBuildCharPipeline</definition>
        <argsstring>(ShGui *p_gui, const char *vertex_shader_path, const char *fragment_shader_path)</argsstring>
        <name>shGuiBuildCharPipeline</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vertex_shader_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fragment_shader_path</declname>
        </param>
        <briefdescription>
<para>Builds the char pipeline using the provided vertex and fragment shader paths. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_shader_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the vertex shader file in the spv file format. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_shader_path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to the fragment shader file in the spv file format.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="730" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="730" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a146dc717bef3a5f08ca3188a0da5637f" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiDestroyPipelineResources</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiDestroyPipelineResources</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Destroys the resources allocated for the GUI Vulkan pipelines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="743" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="743" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a93ded455297322869e9c42ab4e00d63d" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiDestroyPipelines</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiDestroyPipelines</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Destroys the GUI Vulkan pipelines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="754" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="754" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1af721c0d4b7fee360f542c155fa66225e" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiWriteMemory</definition>
        <argsstring>(ShGui *p_gui, VkCommandBuffer transfer_cmd_buffer, uint8_t begin_cmd_buffer)</argsstring>
        <name>shGuiWriteMemory</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>transfer_cmd_buffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>begin_cmd_buffer</declname>
        </param>
        <briefdescription>
<para>Writes memory to the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transfer_cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A Vulkan command buffer valid for memory transfer purposes, for more information see the Vulkan API documentation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin_cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A byte indicating whether to start recording the command buffer, for more information see the Vulkan API documentation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="767" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="767" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1aa3af600ca32b31b38921432b71a745b3" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiResizeInterface</definition>
        <argsstring>(ShGui *p_gui, uint32_t last_width, uint32_t last_height, uint32_t current_width, uint32_t current_height)</argsstring>
        <name>shGuiResizeInterface</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>last_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>last_height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>current_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>current_height</declname>
        </param>
        <briefdescription>
<para>Resizes the GUI interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last_width</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous width of the interface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last_height</parametername>
</parameternamelist>
<parameterdescription>
<para>The previous height of the interface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_width</parametername>
</parameternamelist>
<parameterdescription>
<para>The current width of the interface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_height</parametername>
</parameternamelist>
<parameterdescription>
<para>The current height of the interface.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="784" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="784" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1ac44e13be5c48989e420218e1dd467897" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiReleaseMemory</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiReleaseMemory</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Releases the memory allocated for the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="799" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="799" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1aecd811e0d62c7500dc8cb86f75e4634b" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiRender</definition>
        <argsstring>(ShGui *p_gui, VkCommandBuffer cmd_buffer, uint32_t swapchain_image_idx)</argsstring>
        <name>shGuiRender</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>VkCommandBuffer</type>
          <declname>cmd_buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>swapchain_image_idx</declname>
        </param>
        <briefdescription>
<para>Renders the GUI using the provided command buffer and swapchain image index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A Vulkan command buffer valid for graphics operations, see the Vulkan API documentation for more details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>swapchain_image_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the current swapchain image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="812" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="812" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a3c531649d79d3e4c4262898161a3aaf3" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiSubmitInputs</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiSubmitInputs</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Submits the recorded inputs to the main <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="825" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="825" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a609c7b08fddd09c7885395decf4a4e96" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiRelease</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiRelease</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Releases the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result code indicating the success or failure of the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="836" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="836" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a9b1a4921e32015a39728451daf944b0e" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiLinkInputs</definition>
        <argsstring>(ShGui *p_gui, uint32_t *p_window_width, uint32_t *p_window_height, float *p_cursor_pos_x, float *p_cursor_pos_y, ShGuiKeyEvents key_events, ShGuiKeyEvents last_key_events, double *p_delta_time)</argsstring>
        <name>shGuiLinkInputs</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_window_width</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_window_height</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p_cursor_pos_x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p_cursor_pos_y</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1ad78ef9e1fbfea483c389d7d42d67711d" kindref="member">ShGuiKeyEvents</ref></type>
          <declname>key_events</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1ad78ef9e1fbfea483c389d7d42d67711d" kindref="member">ShGuiKeyEvents</ref></type>
          <declname>last_key_events</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_delta_time</declname>
        </param>
        <briefdescription>
<para>Links the inputs to the <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> handle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_window_width</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the window width variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_window_height</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the window height variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cursor_pos_x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the cursor position x variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cursor_pos_y</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the cursor position y variable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_events</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid of <ref refid="shgui_8h_1ad78ef9e1fbfea483c389d7d42d67711d" kindref="member">ShGuiKeyEvents</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_delta_time</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the delta time variable.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="918" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="918" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a8b3bc79cd9cb70483d361bba0c337615" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiResetInputs</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiResetInputs</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Resets the GUI inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="936" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="936" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1ab7eef3f9e147fd4102686d6317796abd" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiUpdateInputs</definition>
        <argsstring>(ShGui *p_gui)</argsstring>
        <name>shGuiUpdateInputs</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <briefdescription>
<para>Updates the GUI inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="947" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="947" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a8f856bc2003792b4f495c4e06bb988ad" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiScaleUI</definition>
        <argsstring>(ShGui *p_gui, float region_scaling_factor, float char_scaling_factor)</argsstring>
        <name>shGuiScaleUI</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>float</type>
          <declname>region_scaling_factor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>char_scaling_factor</declname>
        </param>
        <briefdescription>
<para>Scales the UI of the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>region_scaling_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>The scaling factor for regions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char_scaling_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>The scaling factor for characters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="960" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="960" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1af689a8711e8b353a6fc8cda0c39097d6" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiRegion</definition>
        <argsstring>(ShGui *p_gui, shguivec2 position_zero, shguivec2 scale_zero, shguivec4 fill_color_zero, shguivec4 edge_fill_color_zero, ShGuiWidgetFlags flags)</argsstring>
        <name>shGuiRegion</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type><ref refid="structshguivec2" kindref="compound">shguivec2</ref></type>
          <declname>position_zero</declname>
        </param>
        <param>
          <type><ref refid="structshguivec2" kindref="compound">shguivec2</ref></type>
          <declname>scale_zero</declname>
        </param>
        <param>
          <type><ref refid="structshguivec4" kindref="compound">shguivec4</ref></type>
          <declname>fill_color_zero</declname>
        </param>
        <param>
          <type><ref refid="structshguivec4" kindref="compound">shguivec4</ref></type>
          <declname>edge_fill_color_zero</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01" kindref="member">ShGuiWidgetFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Creates a region in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of region. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale of the region, in pixels or relative to the window dimensions, depending on the <computeroutput>flags</computeroutput> argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill_color_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The fill color of the region. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_color_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The edge color of the region. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for creating a region.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="978" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="978" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a9dd2b1117c70f24a1c9419d31e3a3851" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiOverwriteRegion</definition>
        <argsstring>(ShGui *p_gui, uint32_t region_idx, ShGuiRegionRaw *p_src_data, ShGuiRegionRawWriteFlags flags)</argsstring>
        <name>shGuiOverwriteRegion</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>region_idx</declname>
        </param>
        <param>
          <type><ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref> *</type>
          <declname>p_src_data</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Overwrites a region in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>region_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the region to overwrite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_src_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the source data for overwriting the region. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for overwriting the region, see <ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="997" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="997" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1acc9092658461c25ba25153c8664f16c1" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiOverwriteRegions</definition>
        <argsstring>(ShGui *p_gui, uint32_t first_region, uint32_t region_count, ShGuiRegionRaw *p_src_data, ShGuiRegionRawWriteFlags flags)</argsstring>
        <name>shGuiOverwriteRegions</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>first_region</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>region_count</declname>
        </param>
        <param>
          <type><ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref> *</type>
          <declname>p_src_data</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Overwrites multiple regions in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_region</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the first region to overwrite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>region_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of regions to overwrite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_src_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the source data for overwriting the regions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for overwriting the regions.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="1015" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="1015" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a72ab2169348cbc3f4637b85bb2434df0" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiTextLineCount</definition>
        <argsstring>(const char *s_text, uint32_t *p_count)</argsstring>
        <name>shGuiTextLineCount</name>
        <param>
          <type>const char *</type>
          <declname>s_text</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>p_count</declname>
        </param>
        <briefdescription>
<para>Counts the number of lines in a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s_text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to count the lines of. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_count</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the variable to store the line count.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="1031" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="1031" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1ae1e1b1e3ae2c8bfa4482f9a74b759033" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiText</definition>
        <argsstring>(ShGui *p_gui, shguivec2 position_zero, shguivec4 fill_color_zero, float scale_zero_pixels, char *s_text, ShGuiWidgetFlags flags)</argsstring>
        <name>shGuiText</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type><ref refid="structshguivec2" kindref="compound">shguivec2</ref></type>
          <declname>position_zero</declname>
        </param>
        <param>
          <type><ref refid="structshguivec4" kindref="compound">shguivec4</ref></type>
          <declname>fill_color_zero</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale_zero_pixels</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s_text</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01" kindref="member">ShGuiWidgetFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Renders text in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the text UI in the window canvas, could be in pixels or relative to the window dimensions, depending on the <computeroutput>flags</computeroutput> argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill_color_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The color of the text characters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale_pixels_zero</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale of the text characters in pixels. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_text</parametername>
</parameternamelist>
<parameterdescription>
<para>Source string of characters to render. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for rendering the text, see <ref refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01" kindref="member">ShGuiWidgetFlags</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="1048" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="1048" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1ac86454d2a0765c1a715829425bee38fc" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiOverwriteChar</definition>
        <argsstring>(ShGui *p_gui, uint32_t char_idx, ShGuiCharRaw *p_src_data, ShGuiCharRawWriteFlags flags)</argsstring>
        <name>shGuiOverwriteChar</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>char_idx</declname>
        </param>
        <param>
          <type><ref refid="struct_sh_gui_char_raw" kindref="compound">ShGuiCharRaw</ref> *</type>
          <declname>p_src_data</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Overwrites a character in the GUI. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the character to overwrite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_src_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the source data for overwriting the character. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for overwriting the character, see <ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="1067" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="1067" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="shgui_8h_1a40e55ab9107287ba86c7afbefc3cbfb6" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t <ref refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" kindref="member">SH_GUI_CALL</ref></type>
        <definition>uint8_t SH_GUI_CALL shGuiOverwriteChars</definition>
        <argsstring>(ShGui *p_gui, uint32_t first_char, uint32_t char_count, ShGuiCharRaw *p_src_data, ShGuiCharRawWriteFlags flags)</argsstring>
        <name>shGuiOverwriteChars</name>
        <param>
          <type><ref refid="struct_sh_gui" kindref="compound">ShGui</ref> *</type>
          <declname>p_gui</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>first_char</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>char_count</declname>
        </param>
        <param>
          <type><ref refid="struct_sh_gui_char_raw" kindref="compound">ShGuiCharRaw</ref> *</type>
          <declname>p_src_data</declname>
        </param>
        <param>
          <type><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overwrites multiple characters in the GUI.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_gui</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a valid <ref refid="struct_sh_gui" kindref="compound">ShGui</ref> structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_char</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the first character to overwrite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of characters to overwrite. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_src_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the source data for overwriting the characters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for overwriting the characters, see <ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the function call, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" line="1085" column="28" declfile="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h" declline="1085" declcolumn="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SH_GUI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shgui-shaders/shguiShaders.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;shvulkan/shVulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="shgui_8h_1a90c5d337ca88985682dbae705e3e77c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_CALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_CALL<sp/>__stdcall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="comment">//_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>@brief<sp/>prints<sp/>an<sp/>error<sp/>message<sp/>and<sp/>executes<sp/>a<sp/>specific<sp/>failure<sp/>expression<sp/>when<sp/>a<sp/>condition<sp/>is<sp/>satisfied.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>@param<sp/>condition<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condition<sp/>that<sp/>has<sp/>to<sp/>be<sp/>satisfied,<sp/>the<sp/>value<sp/>will<sp/>be<sp/>casted<sp/>to<sp/>an<sp/>int<sp/>type.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>@param<sp/>error_msg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>message<sp/>to<sp/>print<sp/>on<sp/>the<sp/>default<sp/>system<sp/>terminal.</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/>@param<sp/>failure_expression<sp/>any<sp/>block<sp/>of<sp/>C<sp/>code.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="shgui_8h_1ae69f5ff88630435153622cab22fa49d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shGuiError(\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>condition,\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>error_msg,\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>failure_expression\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor">)\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((int)(condition))<sp/>{\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;shgui<sp/>error:<sp/>%s\n&quot;,<sp/>(const<sp/>char*)(error_msg));\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failure_expression;\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*<sp/>@brief<sp/>Macro<sp/>for<sp/>checking<sp/>Vulkan<sp/>API<sp/>call<sp/>results<sp/>and<sp/>handling<sp/>errors.</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/>This<sp/>macro<sp/>is<sp/>used<sp/>to<sp/>check<sp/>the<sp/>result<sp/>of<sp/>a<sp/>Vulkan<sp/>API<sp/>call<sp/>and<sp/>handle<sp/>any<sp/>errors<sp/>that<sp/>occur.<sp/>If<sp/>the<sp/>result<sp/>is<sp/>not<sp/>VK_SUCCESS,</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*<sp/>it<sp/>prints<sp/>an<sp/>error<sp/>message<sp/>along<sp/>with<sp/>the<sp/>provided<sp/>`error_msg`<sp/>and<sp/>the<sp/>translated<sp/>Vulkan<sp/>result.<sp/>Additionally,<sp/>it<sp/>executes</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>the<sp/>`failure_expression`,<sp/>allowing<sp/>for<sp/>custom<sp/>error<sp/>handling<sp/>code.</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*<sp/>@param<sp/>result<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>code<sp/>to<sp/>be<sp/>checked,<sp/>typically<sp/>returned<sp/>by<sp/>a<sp/>Vulkan<sp/>API<sp/>call.</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/>@param<sp/>error_msg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>user-defined<sp/>error<sp/>message<sp/>to<sp/>be<sp/>displayed<sp/>in<sp/>case<sp/>of<sp/>failure.</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>@param<sp/>failure_expression<sp/>Custom<sp/>code<sp/>or<sp/>action<sp/>to<sp/>be<sp/>executed<sp/>in<sp/>case<sp/>of<sp/>failure.</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="shgui_8h_1ac3ada90cbae19b201bc363a7289eb278" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>shGuiVkResultError(\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>result,\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>error_msg,\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>failure_expression\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">)\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((VkResult)(result)<sp/>!=<sp/>VK_SUCCESS)<sp/>{\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;shgui<sp/>vulkan<sp/>error:<sp/>%s,<sp/>%s\n&quot;,<sp/>error_msg,<sp/>shTranslateVkResult((VkResult)(result)));\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failure_expression;\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*<sp/>@brief<sp/>Macro<sp/>used<sp/>to<sp/>define<sp/>an<sp/>empty<sp/>C<sp/>struct<sp/>with<sp/>the<sp/>`shgui`<sp/>api.</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_STRUCTURE_ZERO<sp/>{<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*<sp/>@struct<sp/>ShGuiCore</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>the<sp/>core<sp/>Vulkan<sp/>components<sp/>for<sp/>the<sp/>`shgui`<sp/>library.</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*<sp/>The<sp/>@ref<sp/>ShGuiCore<sp/>structure<sp/>encapsulates<sp/>essential<sp/>Vulkan<sp/>components<sp/>required<sp/>by<sp/>the<sp/>`shgui`<sp/>library<sp/>for<sp/>rendering<sp/>and<sp/>GUI<sp/>operations.<sp/>It<sp/>includes<sp/>the<sp/>Vulkan<sp/>device,<sp/>physical<sp/>device,<sp/>graphics<sp/>queue<sp/>information,<sp/>rendering<sp/>surface,<sp/>render<sp/>pass,<sp/>and<sp/>other<sp/>relevant<sp/>settings.</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_sh_gui_core" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sh_gui_core" kindref="compound">ShGuiCore</ref><sp/>{</highlight></codeline>
<codeline lineno="83" refid="struct_sh_gui_core_1a73f3797a239ec75ed59e1a5630771b64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDevice<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1a73f3797a239ec75ed59e1a5630771b64" kindref="member">device</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Vulkan<sp/>logical<sp/>device.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct_sh_gui_core_1a04666aed8e5d104591664156eb07a815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPhysicalDevice<sp/><ref refid="struct_sh_gui_core_1a04666aed8e5d104591664156eb07a815" kindref="member">physical_device</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Vulkan<sp/>physical<sp/>device.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="struct_sh_gui_core_1a6f87cc2369c51500669510da21e4d5b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1a6f87cc2369c51500669510da21e4d5b9" kindref="member">graphics_queue_family_index</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>Index<sp/>of<sp/>the<sp/>graphics<sp/>queue<sp/>family.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_sh_gui_core_1a7e3ae98525b4b7c3a740adbb93f2c6e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkQueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1a7e3ae98525b4b7c3a740adbb93f2c6e6" kindref="member">graphics_queue</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Vulkan<sp/>graphics<sp/>queue.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="struct_sh_gui_core_1a59e5e9b5d0f7893cb0dcfd9a420a6575" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1a59e5e9b5d0f7893cb0dcfd9a420a6575" kindref="member">surface</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>rendering<sp/>surface.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_sh_gui_core_1ae77f52605e509d735f348bd0de9d8ad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderPass<sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1ae77f52605e509d735f348bd0de9d8ad6" kindref="member">render_pass</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Vulkan<sp/>render<sp/>pass.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct_sh_gui_core_1a84f1ea70eb89f18899d0a5336ce0ce4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1a84f1ea70eb89f18899d0a5336ce0ce4f" kindref="member">sample_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>sample<sp/>count<sp/>for<sp/>rendering.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_sh_gui_core_1ad9b63f10b1de5d51f6834a27cfeb92ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_core_1ad9b63f10b1de5d51f6834a27cfeb92ab" kindref="member">swapchain_image_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>swapchain<sp/>images.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="shgui_8h_1ae77d0043e2676ab820d239d91e7dae1a" refkind="member"><highlight class="normal">}<sp/><ref refid="struct_sh_gui_core" kindref="compound">ShGuiCore</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/>@brief<sp/>The<sp/>last<sp/>valid<sp/>key<sp/>event<sp/>code<sp/>in<sp/>the<sp/>`shgui`<sp/>library.</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/>This<sp/>constant<sp/>represents<sp/>the<sp/>highest<sp/>valid<sp/>key<sp/>event<sp/>code<sp/>within<sp/>the<sp/>`shgui`<sp/>library.<sp/>Key<sp/>event<sp/>codes<sp/>are<sp/>typically<sp/>used<sp/>to<sp/>identify<sp/>and<sp/>handle<sp/>keyboard<sp/>input<sp/>in<sp/>`shgui`<sp/>applications.</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="shgui_8h_1ad963d28a02072b1a5f3a0ee531d25e1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_KEY_LAST<sp/>348</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*<sp/>@typedef<sp/>ShGuiKeyEvents</highlight></codeline>
<codeline lineno="106"><highlight class="comment">*<sp/>@brief<sp/>A<sp/>memory<sp/>block<sp/>to<sp/>represent<sp/>and<sp/>store<sp/>`shgui`<sp/>key<sp/>events.</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="shgui_8h_1ad78ef9e1fbfea483c389d7d42d67711d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/><ref refid="shgui_8h_1ad78ef9e1fbfea483c389d7d42d67711d" kindref="member">ShGuiKeyEvents</ref>[<ref refid="shgui_8h_1ad963d28a02072b1a5f3a0ee531d25e1c" kindref="member">SH_GUI_KEY_LAST</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/>@brief<sp/>A<sp/>constant<sp/>representing<sp/>the<sp/>absence<sp/>of<sp/>a<sp/>key<sp/>event.</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="shgui_8h_1a1abb4b4b5fcb9c2575a66e66f4611f94" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_NO_KEY<sp/>UINT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*<sp/>@typedef<sp/>ShGui_UTF32_Char</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>a<sp/>Unicode<sp/>character<sp/>encoded<sp/>in<sp/>UTF-32<sp/>format.</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="shgui_8h_1aac42692bf846c31d71b89bd5e89c30a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="shgui_8h_1aac42692bf846c31d71b89bd5e89c30a1" kindref="member">ShGui_UTF32_Char</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="128"><highlight class="comment">*<sp/>@enum<sp/>ShGuiInputFlags</highlight></codeline>
<codeline lineno="129"><highlight class="comment">*<sp/>@brief<sp/>Flags<sp/>for<sp/>`shgui`<sp/>input<sp/>handling.<sp/>These<sp/>flags<sp/>help<sp/>control<sp/>how<sp/>input<sp/>events,<sp/>such<sp/>as<sp/>clicks<sp/>and<sp/>key<sp/>presses,<sp/>are<sp/>processed.</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3" kindref="member">ShGuiInputFlags</ref><sp/>{</highlight></codeline>
<codeline lineno="132" refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3af8d40427f0326bedeb943b90dc622eb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3af8d40427f0326bedeb943b90dc622eb0" kindref="member">SH_GUI_CLICK_ONCE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Single<sp/>click<sp/>event.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3abfbab7d756c4fac1ea3f92a5e841d3fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3abfbab7d756c4fac1ea3f92a5e841d3fe" kindref="member">SH_GUI_CLICK_REPEAT</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Repeated<sp/>click<sp/>event.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3af664c8041c3d24b5604a193b2282f00a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3af664c8041c3d24b5604a193b2282f00a" kindref="member">SH_GUI_PRESS_ONCE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Single<sp/>press<sp/>event.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3ad804a40f55809cfa67fa24f0a141c8ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3ad804a40f55809cfa67fa24f0a141c8ee" kindref="member">SH_GUI_PRESS_REPEAT</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Repeated<sp/>press<sp/>event.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3ab874bc2fc9b5124c263bb102b7c8f8ef" kindref="member">SH_GUI_PRESS_MAX_ENUM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Maximum<sp/>value<sp/>for<sp/>enumeration<sp/>boundary<sp/>checking.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3ab874bc2fc9b5124c263bb102b7c8f8ef" refkind="member"><highlight class="normal">}<sp/><ref refid="shgui_8h_1ad7d53e8824fddccbcda50ae9453b23a3" kindref="member">ShGuiInputFlags</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="142"><highlight class="comment">*<sp/>@struct<sp/>ShGuiInputs</highlight></codeline>
<codeline lineno="143"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>`shgui`<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="144"><highlight class="comment">*</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*<sp/>The<sp/>`ShGuiInputs`<sp/>structure<sp/>encapsulates<sp/>various<sp/>input<sp/>data<sp/>used<sp/>in<sp/>`shgui`<sp/>applications,<sp/>including<sp/>window<sp/>dimensions,<sp/>key<sp/>events,<sp/>and<sp/>a<sp/>system-submitted<sp/>character.<sp/>It<sp/>is<sp/>designed<sp/>to<sp/>help<sp/>manage<sp/>and<sp/>process<sp/>input-related<sp/>information.</highlight></codeline>
<codeline lineno="146"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="struct_sh_gui_inputs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sh_gui_inputs" kindref="compound">ShGuiInputs</ref><sp/>{</highlight></codeline>
<codeline lineno="148" refid="struct_sh_gui_inputs_1a5e333ebf323fa146397a67eaa7508c95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_inputs_1a5e333ebf323fa146397a67eaa7508c95" kindref="member">p_window_width</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>window&apos;s<sp/>width.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="struct_sh_gui_inputs_1af0ff0a7f897f16b2bd510fc26ae31b0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_inputs_1af0ff0a7f897f16b2bd510fc26ae31b0d" kindref="member">p_window_height</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Pointer<sp/>to<sp/>the<sp/>window&apos;s<sp/>height.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="struct_sh_gui_inputs_1a60951e20452817633f172504537a2dae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_inputs_1a60951e20452817633f172504537a2dae" kindref="member">key_events</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Memory<sp/>block<sp/>to<sp/>store<sp/>key<sp/>events.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_sh_gui_inputs_1af20b322fcb3d8f2ad84c203f69ba4780" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_inputs_1af20b322fcb3d8f2ad84c203f69ba4780" kindref="member">last_key_events</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Memory<sp/>block<sp/>to<sp/>store<sp/>the<sp/>last<sp/>recorded<sp/>key<sp/>events.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="struct_sh_gui_inputs_1a910daef2850309db23885949fe8a97fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1aac42692bf846c31d71b89bd5e89c30a1" kindref="member">ShGui_UTF32_Char</ref><sp/><ref refid="struct_sh_gui_inputs_1a910daef2850309db23885949fe8a97fc" kindref="member">system_submitted_char</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>System-submitted<sp/>character<sp/>for<sp/>text<sp/>input.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="shgui_8h_1af21e9a483acf02a77d02f08cd1084c84" refkind="member"><highlight class="normal">}<sp/><ref refid="struct_sh_gui_inputs" kindref="compound">ShGuiInputs</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="157"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="158"><highlight class="comment">*<sp/>@struct<sp/>shguivec2</highlight></codeline>
<codeline lineno="159"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>a<sp/>2D<sp/>vector<sp/>with<sp/>two<sp/>float<sp/>components.</highlight></codeline>
<codeline lineno="160"><highlight class="comment">*</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*<sp/>The<sp/>`shguivec2`<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>2D<sp/>vectors<sp/>with<sp/>`x`<sp/>and<sp/>`y`<sp/>components.<sp/>It<sp/>is<sp/>commonly<sp/>employed<sp/>in<sp/>`shgui`<sp/>applications<sp/>for<sp/>various<sp/>2D<sp/>operations.</highlight></codeline>
<codeline lineno="162"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="structshguivec2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshguivec2" kindref="compound">shguivec2</ref><sp/>{</highlight></codeline>
<codeline lineno="164" refid="structshguivec2_1a6eb5b41b5ca57227bc06628b7dd1cbe4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec2_1a6eb5b41b5ca57227bc06628b7dd1cbe4" kindref="member">x</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>x-component<sp/>of<sp/>the<sp/>2D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="structshguivec2_1a0d73f519975555590c065d3ef42e7f82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec2_1a0d73f519975555590c065d3ef42e7f82" kindref="member">y</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>y-component<sp/>of<sp/>the<sp/>2D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="shgui_8h_1a6a1a2772493e3ff07a1a3306e35e97a2" refkind="member"><highlight class="normal">}<sp/><ref refid="structshguivec2" kindref="compound">shguivec2</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="169"><highlight class="comment">*<sp/>@struct<sp/>shguivec3</highlight></codeline>
<codeline lineno="170"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>a<sp/>3D<sp/>vector<sp/>with<sp/>three<sp/>float<sp/>components.</highlight></codeline>
<codeline lineno="171"><highlight class="comment">*</highlight></codeline>
<codeline lineno="172"><highlight class="comment">*<sp/>The<sp/>`shguivec3`<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>3D<sp/>vectors<sp/>with<sp/>`x`,<sp/>`y`,<sp/>and<sp/>`z`<sp/>components.<sp/>It<sp/>is<sp/>typically<sp/>utilized<sp/>in<sp/>`shgui`<sp/>applications<sp/>for<sp/>various<sp/>3D<sp/>operations.</highlight></codeline>
<codeline lineno="173"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structshguivec3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshguivec3" kindref="compound">shguivec3</ref><sp/>{</highlight></codeline>
<codeline lineno="175" refid="structshguivec3_1ab525e5daf7e6e4062feca045d270ee31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec3_1ab525e5daf7e6e4062feca045d270ee31" kindref="member">x</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>x-component<sp/>of<sp/>the<sp/>3D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="structshguivec3_1a6d97cfc24222a48730195c0901ec84a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec3_1a6d97cfc24222a48730195c0901ec84a4" kindref="member">y</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>y-component<sp/>of<sp/>the<sp/>3D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="structshguivec3_1a47ec160a9fc6dca877842f60261825e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec3_1a47ec160a9fc6dca877842f60261825e3" kindref="member">z</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>z-component<sp/>of<sp/>the<sp/>3D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="shgui_8h_1a7e880e06ee42933ee84088a80ba2857f" refkind="member"><highlight class="normal">}<sp/><ref refid="structshguivec3" kindref="compound">shguivec3</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="181"><highlight class="comment">*<sp/>@struct<sp/>shguivec4</highlight></codeline>
<codeline lineno="182"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>a<sp/>4D<sp/>vector<sp/>with<sp/>four<sp/>float<sp/>components.</highlight></codeline>
<codeline lineno="183"><highlight class="comment">*</highlight></codeline>
<codeline lineno="184"><highlight class="comment">*<sp/>The<sp/>`shguivec4`<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>4D<sp/>vectors<sp/>with<sp/>`x`,<sp/>`y`,<sp/>`z`,<sp/>and<sp/>`w`<sp/>components.<sp/>It<sp/>is<sp/>commonly<sp/>employed<sp/>in<sp/>`shgui`<sp/>applications<sp/>for<sp/>various<sp/>4D<sp/>operations.</highlight></codeline>
<codeline lineno="185"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structshguivec4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structshguivec4" kindref="compound">shguivec4</ref><sp/>{</highlight></codeline>
<codeline lineno="187" refid="structshguivec4_1aa1f0dd33d7f83e1f6fca1a3def3d69f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec4_1aa1f0dd33d7f83e1f6fca1a3def3d69f5" kindref="member">x</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>x-component<sp/>of<sp/>the<sp/>4D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="structshguivec4_1a28a9ea43b38390b6d8f00229e64fd0cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec4_1a28a9ea43b38390b6d8f00229e64fd0cd" kindref="member">y</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>y-component<sp/>of<sp/>the<sp/>4D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structshguivec4_1af9a83c07ca793b44ec358efbef4557fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec4_1af9a83c07ca793b44ec358efbef4557fa" kindref="member">z</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>z-component<sp/>of<sp/>the<sp/>4D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structshguivec4_1a96cbb08157d8e33c829c9f2051cbaa87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structshguivec4_1a96cbb08157d8e33c829c9f2051cbaa87" kindref="member">w</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>w-component<sp/>of<sp/>the<sp/>4D<sp/>vector.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="shgui_8h_1a325fd2d177d0b82638f95c846a4ba7de" refkind="member"><highlight class="normal">}<sp/><ref refid="structshguivec4" kindref="compound">shguivec4</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="197"><highlight class="comment">*<sp/>@var<sp/>_SH_GUI_VEC2_ZERO</highlight></codeline>
<codeline lineno="198"><highlight class="comment">*<sp/>@brief<sp/>Zero-initialized<sp/>2D<sp/>vector<sp/>constant.</highlight></codeline>
<codeline lineno="199"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshguivec2" kindref="compound">shguivec2</ref><sp/>_SH_GUI_VEC2_ZERO<sp/>=<sp/><ref refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" kindref="member">SH_GUI_STRUCTURE_ZERO</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="203"><highlight class="comment">*<sp/>@var<sp/>_SH_GUI_VEC3_ZERO</highlight></codeline>
<codeline lineno="204"><highlight class="comment">*<sp/>@brief<sp/>Zero-initialized<sp/>3D<sp/>vector<sp/>constant.</highlight></codeline>
<codeline lineno="205"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshguivec3" kindref="compound">shguivec3</ref><sp/>_SH_GUI_VEC3_ZERO<sp/>=<sp/><ref refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" kindref="member">SH_GUI_STRUCTURE_ZERO</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*<sp/>@var<sp/>_SH_GUI_VEC4_ZERO</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*<sp/>@brief<sp/>Zero-initialized<sp/>4D<sp/>vector<sp/>constant.</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structshguivec4" kindref="compound">shguivec4</ref><sp/>_SH_GUI_VEC4_ZERO<sp/>=<sp/><ref refid="shgui_8h_1a129d0fea58bef41ded95cae4f008a8b0" kindref="member">SH_GUI_STRUCTURE_ZERO</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/>@brief<sp/>Alias<sp/>for<sp/>`_SH_GUI_VEC2_ZERO`.</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="shgui_8h_1a62230dab64005300af538ac7f5c2cee8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_VEC2_ZERO<sp/>_SH_GUI_VEC2_ZERO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="220"><highlight class="comment">*<sp/>@brief<sp/>Alias<sp/>for<sp/>`_SH_GUI_VEC3_ZERO`.</highlight></codeline>
<codeline lineno="221"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="shgui_8h_1a3db1e144da2d742bddb9f72e6f0ea82b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_VEC3_ZERO<sp/>_SH_GUI_VEC3_ZERO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="225"><highlight class="comment">*<sp/>@brief<sp/>Alias<sp/>for<sp/>`_SH_GUI_VEC4_ZERO`.</highlight></codeline>
<codeline lineno="226"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="shgui_8h_1a79e017d39157bd3bf919edede8883fac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_VEC4_ZERO<sp/>_SH_GUI_VEC4_ZERO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="230"><highlight class="comment">*<sp/>@brief<sp/>Copy<sp/>a<sp/>2D<sp/>vector<sp/>from<sp/>source<sp/>to<sp/>destination.</highlight></codeline>
<codeline lineno="231"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="shgui_8h_1a55b882c68c1a5b8b7433d478ff6e31f8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_VEC2_COPY(dst,<sp/>src)<sp/>(((dst).x<sp/>=<sp/>(src).x)<sp/>&amp;&amp;<sp/>((dst).y<sp/>=<sp/>(src).y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="235"><highlight class="comment">*<sp/>@brief<sp/>Copy<sp/>a<sp/>3D<sp/>vector<sp/>from<sp/>source<sp/>to<sp/>destination.</highlight></codeline>
<codeline lineno="236"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="shgui_8h_1aba1d5152ca796c2e4922d02767010816" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_VEC3_COPY(dst,<sp/>src)<sp/>(((dst).x<sp/>=<sp/>(src).x)<sp/>&amp;&amp;<sp/>((dst).y<sp/>=<sp/>(src).y)<sp/>&amp;&amp;<sp/>((dst).z<sp/>=<sp/>(src).z))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="240"><highlight class="comment">*<sp/>@brief<sp/>Copy<sp/>a<sp/>4D<sp/>vector<sp/>from<sp/>source<sp/>to<sp/>destination.</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="shgui_8h_1ac317ba09231b9edea68dac8ecb9efa38" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_VEC4_COPY(dst,<sp/>src)<sp/>(((dst).x<sp/>=<sp/>(src).x)<sp/>&amp;&amp;<sp/>((dst).y<sp/>=<sp/>(src).y)<sp/>&amp;&amp;<sp/>((dst).z<sp/>=<sp/>(src).z)<sp/>&amp;&amp;<sp/>((dst).w<sp/>=<sp/>(src).w))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="245"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>black.</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="shgui_8h_1aca6d17443ff40992fef7c1fd56ffcbd0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_BLACK<sp/>(shguivec4){<sp/>0.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="250"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>white.</highlight></codeline>
<codeline lineno="251"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="shgui_8h_1a611e881b86790f284171a9d5263b58d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_WHITE<sp/>(shguivec4){<sp/>1.0f,<sp/>1.0f,<sp/>1.0f,<sp/>1.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="254"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="255"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>red.</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="shgui_8h_1a70f23061128777d2086ef87a5e8c3ec5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_RED<sp/>(shguivec4){<sp/>1.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="259"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="260"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>green.</highlight></codeline>
<codeline lineno="261"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="shgui_8h_1a722f2981a79d63aa1df756db30c1706f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_GREEN<sp/>(shguivec4){<sp/>0.0f,<sp/>1.0f,<sp/>0.0f,<sp/>1.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="265"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>blue.</highlight></codeline>
<codeline lineno="266"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="shgui_8h_1a15a60674c2fc127127168fdcaddb4f57" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_BLUE<sp/>(shguivec4){<sp/>0.0f,<sp/>0.0f,<sp/>1.0f,<sp/>1.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="269"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="270"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>yellow.</highlight></codeline>
<codeline lineno="271"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="shgui_8h_1a48f355c4e30f9d009f01f6c307d0ea04" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_YELLOW<sp/>(shguivec4){<sp/>1.0f,<sp/>1.0f,<sp/>0.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="275"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>cyan.</highlight></codeline>
<codeline lineno="276"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="shgui_8h_1ac4c02963bdf2762b7acad2a5a8d2ad99" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_CYAN<sp/>(shguivec4){<sp/>0.0f,<sp/>1.0f,<sp/>1.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="280"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>magenta.</highlight></codeline>
<codeline lineno="281"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="shgui_8h_1ab637c8171a8ae93574f9348e367957ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_MAGENTA<sp/>(shguivec4){<sp/>1.0f,<sp/>0.0f,<sp/>1.0f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="285"><highlight class="comment">*<sp/>@brief<sp/>Color<sp/>constant<sp/>representing<sp/>grey.</highlight></codeline>
<codeline lineno="286"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="shgui_8h_1a23250eff24457584cc8b8656becd20c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_COLOR_GREY<sp/>(shguivec4){<sp/>0.5f,<sp/>0.5f,<sp/>0.5f<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="292"><highlight class="comment">*<sp/>@struct<sp/>ShGuiRegionRaw</highlight></codeline>
<codeline lineno="293"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>raw<sp/>data<sp/>for<sp/>a<sp/>`shgui`<sp/>region.</highlight></codeline>
<codeline lineno="294"><highlight class="comment">*</highlight></codeline>
<codeline lineno="295"><highlight class="comment">*<sp/>The<sp/>`ShGuiRegionRaw`<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>raw<sp/>data<sp/>for<sp/>a<sp/>`shgui`<sp/>region.<sp/>It<sp/>includes<sp/>the<sp/>following<sp/>properties:</highlight></codeline>
<codeline lineno="296"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="struct_sh_gui_region_raw" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref><sp/>{</highlight></codeline>
<codeline lineno="298" refid="struct_sh_gui_region_raw_1a3298fd48bc504a289fd681c3e6751760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshguivec2" kindref="compound">shguivec2</ref><sp/><ref refid="struct_sh_gui_region_raw_1a3298fd48bc504a289fd681c3e6751760" kindref="member">position</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>@ref<sp/>shguivec2<sp/>position<sp/>of<sp/>the<sp/>region.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="struct_sh_gui_region_raw_1a025242c6de585b4bdc9b8128a50528ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshguivec2" kindref="compound">shguivec2</ref><sp/><ref refid="struct_sh_gui_region_raw_1a025242c6de585b4bdc9b8128a50528ee" kindref="member">scale</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>@ref<sp/>shguivec2<sp/>scale<sp/>of<sp/>the<sp/>region.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="struct_sh_gui_region_raw_1a0412da0e7a8b8e7229ee4cef3030238e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshguivec4" kindref="compound">shguivec4</ref><sp/><ref refid="struct_sh_gui_region_raw_1a0412da0e7a8b8e7229ee4cef3030238e" kindref="member">color</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>@ref<sp/>shguivec4<sp/>color<sp/>of<sp/>the<sp/>region.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="struct_sh_gui_region_raw_1a6cc40e9b14e30adf3752d95998bdcaf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshguivec3" kindref="compound">shguivec3</ref><sp/><ref refid="struct_sh_gui_region_raw_1a6cc40e9b14e30adf3752d95998bdcaf2" kindref="member">edge_color</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>@ref<sp/>shguivec3<sp/>edge<sp/>color<sp/>of<sp/>the<sp/>region.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="struct_sh_gui_region_raw_1a56889c2b0621b62c76651068506690aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_region_raw_1a56889c2b0621b62c76651068506690aa" kindref="member">z_priority</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>priority<sp/>of<sp/>the<sp/>region<sp/>over<sp/>other<sp/>`shgui`<sp/>widgets.<sp/>Smaller<sp/>values<sp/>represent<sp/>a<sp/>higher<sp/>priority.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="shgui_8h_1a96c05f2c7427b930eacca0119e26e795" refkind="member"><highlight class="normal">}<sp/><ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="306"><highlight class="comment">*<sp/>@brief<sp/>Maximum<sp/>number<sp/>of<sp/>regions<sp/>supported<sp/>in<sp/>a<sp/>`shgui`<sp/>application.</highlight></codeline>
<codeline lineno="307"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="shgui_8h_1ae95364c1b8e15e44bfecc7f6ba0d44e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_REGION_COUNT<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="311"><highlight class="comment">*<sp/>@brief<sp/>Maximum<sp/>size<sp/>in<sp/>bytes<sp/>for<sp/>raw<sp/>region<sp/>data<sp/>in<sp/>a<sp/>`shgui`<sp/>application.</highlight></codeline>
<codeline lineno="312"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="shgui_8h_1a565639b02d4e3da35fb500cf20450cf4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_REGIONS_RAW_SIZE<sp/>(SH_GUI_MAX_REGION_COUNT<sp/>*<sp/>sizeof(ShGuiRegionRaw))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@enum<sp/>ShGuiRegionRawWriteFlags</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Flags<sp/>for<sp/>specifying<sp/>raw<sp/>write<sp/>operations<sp/>on<sp/>`shgui`<sp/>regions.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>The<sp/>`ShGuiRegionRawWriteFlags`<sp/>enumeration<sp/>defines<sp/>a<sp/>set<sp/>of<sp/>flags<sp/>used<sp/>to<sp/>specify<sp/>raw<sp/>write<sp/>operations<sp/>on<sp/>`shgui`<sp/>regions.<sp/>These<sp/>flags<sp/>indicate<sp/>which<sp/>properties<sp/>of<sp/>a<sp/>region<sp/>should<sp/>be<sp/>updated<sp/>during<sp/>the<sp/>write<sp/>operation.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref><sp/>{</highlight></codeline>
<codeline lineno="324" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a4d6854d7a3d46d51c256de64e15d6223" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a4d6854d7a3d46d51c256de64e15d6223" kindref="member">SH_GUI_REGION_RAW_WRITE_NONE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>No<sp/>raw<sp/>write<sp/>operation.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a81fd36e3498189e4e124583163fb93fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a81fd36e3498189e4e124583163fb93fd" kindref="member">SH_GUI_REGION_RAW_WRITE_X_POSITION</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>X-position<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a67c7a0e523307e4a27ba1b5e01307726" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a67c7a0e523307e4a27ba1b5e01307726" kindref="member">SH_GUI_REGION_RAW_WRITE_Y_POSITION</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>Y-position<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19ab2ca7600c471fb005eb804cdd6d6652c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19ab2ca7600c471fb005eb804cdd6d6652c" kindref="member">SH_GUI_REGION_RAW_WRITE_POSITION</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a81fd36e3498189e4e124583163fb93fd" kindref="member">SH_GUI_REGION_RAW_WRITE_X_POSITION</ref><sp/>|<sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a67c7a0e523307e4a27ba1b5e01307726" kindref="member">SH_GUI_REGION_RAW_WRITE_Y_POSITION</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>both<sp/>X<sp/>and<sp/>Y<sp/>positions<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19adaad5af443895eff55175bae9e17bee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19adaad5af443895eff55175bae9e17bee4" kindref="member">SH_GUI_REGION_RAW_WRITE_X_SCALE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>X-scale<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a498b627339d14f9cb1215168bceeea9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a498b627339d14f9cb1215168bceeea9e" kindref="member">SH_GUI_REGION_RAW_WRITE_Y_SCALE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>Y-scale<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19adafa7386556c1602147e0a07137a8c14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19adafa7386556c1602147e0a07137a8c14" kindref="member">SH_GUI_REGION_RAW_WRITE_SCALE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19adaad5af443895eff55175bae9e17bee4" kindref="member">SH_GUI_REGION_RAW_WRITE_X_SCALE</ref><sp/>|<sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a498b627339d14f9cb1215168bceeea9e" kindref="member">SH_GUI_REGION_RAW_WRITE_Y_SCALE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>both<sp/>X<sp/>and<sp/>Y<sp/>scales<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19ac0f29acb7830f62d7f469a22963a4af8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19ac0f29acb7830f62d7f469a22963a4af8" kindref="member">SH_GUI_REGION_RAW_WRITE_COLOR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>color<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a3578004f696e846666ff02ed16b42aad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a3578004f696e846666ff02ed16b42aad" kindref="member">SH_GUI_REGION_RAW_WRITE_EDGE_COLOR</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>edge<sp/>color<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a84a8952c8d7cc8a469bf3372e0c4eb0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a84a8952c8d7cc8a469bf3372e0c4eb0c" kindref="member">SH_GUI_REGION_RAW_WRITE_Z_PRIORITY</ref><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Write<sp/>the<sp/>Z-priority<sp/>property<sp/>of<sp/>a<sp/>`shgui`<sp/>region.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a78f3e6a6eebd07ec6b77c89bed78bf4d" kindref="member">SH_GUI_REGION_RAW_WRITE_MAX_ENUM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Maximum<sp/>value<sp/>for<sp/>enumeration<sp/>boundary<sp/>checking.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19a78f3e6a6eebd07ec6b77c89bed78bf4d" refkind="member"><highlight class="normal">}<sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="340"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="341"><highlight class="comment">*<sp/>@struct<sp/>ShGuiRegionInfos</highlight></codeline>
<codeline lineno="342"><highlight class="comment">*<sp/>@brief<sp/>Stores<sp/>information<sp/>about<sp/>`shgui`<sp/>regions.</highlight></codeline>
<codeline lineno="343"><highlight class="comment">*</highlight></codeline>
<codeline lineno="344"><highlight class="comment">*<sp/>The<sp/>`ShGuiRegionInfos`<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>store<sp/>information<sp/>about<sp/>`shgui`<sp/>regions.</highlight></codeline>
<codeline lineno="345"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="struct_sh_gui_region_infos" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sh_gui_region_infos" kindref="compound">ShGuiRegionInfos</ref><sp/>{</highlight></codeline>
<codeline lineno="347" refid="struct_sh_gui_region_infos_1a5baf2d09673da6ab3e3065183abe0f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_region_infos_1a5baf2d09673da6ab3e3065183abe0f25" kindref="member">region_scale_factor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>A<sp/>floating-point<sp/>value<sp/>representing<sp/>the<sp/>region<sp/>scale<sp/>factor.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="struct_sh_gui_region_infos_1af1a8593c5c5866ffdb4570c9a346c010" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_region_infos_1af1a8593c5c5866ffdb4570c9a346c010" kindref="member">region_count</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>total<sp/>count<sp/>of<sp/>regions.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="struct_sh_gui_region_infos_1af073a93da41bc54dbbe9da050304db70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_region_raw" kindref="compound">ShGuiRegionRaw</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_region_infos_1af073a93da41bc54dbbe9da050304db70" kindref="member">regions_raw</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[<ref refid="shgui_8h_1ae95364c1b8e15e44bfecc7f6ba0d44e7" kindref="member">SH_GUI_MAX_REGION_COUNT</ref>];<sp/></highlight><highlight class="comment">/**&lt;<sp/>A<sp/>memory<sp/>block<sp/>of<sp/>@ref<sp/>ShGuiRegionRaw<sp/>structures<sp/>representing<sp/>raw<sp/>region<sp/>data.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="struct_sh_gui_region_infos_1a05b2dfb0586a43a4bd536905b45877d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1ac996ab68bd7341e072f730a374011d19" kindref="member">ShGuiRegionRawWriteFlags</ref><sp/><ref refid="struct_sh_gui_region_infos_1a05b2dfb0586a43a4bd536905b45877d1" kindref="member">regions_raw_write_flags</ref>[<ref refid="shgui_8h_1ae95364c1b8e15e44bfecc7f6ba0d44e7" kindref="member">SH_GUI_MAX_REGION_COUNT</ref>];<sp/></highlight><highlight class="comment">/**&lt;<sp/>A<sp/>memory<sp/>block<sp/>of<sp/>@ref<sp/>ShGuiRegionRawWriteFlags<sp/>for<sp/>specifying<sp/>raw<sp/>write<sp/>operations<sp/>on<sp/>regions.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="shgui_8h_1a74d6ac4ba6233a68cec9549680c8e054" refkind="member"><highlight class="normal">}<sp/><ref refid="struct_sh_gui_region_infos" kindref="compound">ShGuiRegionInfos</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="356"><highlight class="comment">*<sp/>@struct<sp/>ShGuiCharRaw</highlight></codeline>
<codeline lineno="357"><highlight class="comment">*<sp/>@brief<sp/>Represents<sp/>raw<sp/>data<sp/>for<sp/>a<sp/>`shgui`<sp/>character.</highlight></codeline>
<codeline lineno="358"><highlight class="comment">*</highlight></codeline>
<codeline lineno="359"><highlight class="comment">*<sp/>The<sp/>`ShGuiCharRaw`<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>raw<sp/>data<sp/>for<sp/>a<sp/>`shgui`<sp/>character.<sp/>It<sp/>includes<sp/>the<sp/>following<sp/>properties:</highlight></codeline>
<codeline lineno="360"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="struct_sh_gui_char_raw" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sh_gui_char_raw" kindref="compound">ShGuiCharRaw</ref><sp/>{</highlight></codeline>
<codeline lineno="362" refid="struct_sh_gui_char_raw_1a340966f125b3787b4ff7d469bd53c232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshguivec2" kindref="compound">shguivec2</ref><sp/><ref refid="struct_sh_gui_char_raw_1a340966f125b3787b4ff7d469bd53c232" kindref="member">position</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>A<sp/>@ref<sp/>shguivec2<sp/>representing<sp/>the<sp/>position<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="struct_sh_gui_char_raw_1a1671697a7994178f959722ef4b732a38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_char_raw_1a1671697a7994178f959722ef4b732a38" kindref="member">scale</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>A<sp/>floating-point<sp/>value<sp/>indicating<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="struct_sh_gui_char_raw_1aaa92c0236ad2589047a6322adebfe1e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sh_gui_char_raw_1aaa92c0236ad2589047a6322adebfe1e5" kindref="member">z_priority</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>The<sp/>priority<sp/>of<sp/>the<sp/>char<sp/>over<sp/>other<sp/>`shgui`<sp/>widgets.<sp/>Smaller<sp/>values<sp/>represent<sp/>a<sp/>higher<sp/>priority.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="struct_sh_gui_char_raw_1a2bdc35eca92a0ee2a5a7c32b6435deed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structshguivec4" kindref="compound">shguivec4</ref><sp/><ref refid="struct_sh_gui_char_raw_1a2bdc35eca92a0ee2a5a7c32b6435deed" kindref="member">color</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>A<sp/>@ref<sp/>shguivec4<sp/>representing<sp/>the<sp/>color<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="shgui_8h_1a6e5869407d043aad59e8fe5673bbca3d" refkind="member"><highlight class="normal">}<sp/><ref refid="struct_sh_gui_char_raw" kindref="compound">ShGuiCharRaw</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="369"><highlight class="comment">*<sp/>@enum<sp/>ShGuiCharRawWriteFlags</highlight></codeline>
<codeline lineno="370"><highlight class="comment">*<sp/>@brief<sp/>Flags<sp/>for<sp/>specifying<sp/>raw<sp/>write<sp/>operations<sp/>on<sp/>`shgui`<sp/>characters.</highlight></codeline>
<codeline lineno="371"><highlight class="comment">*</highlight></codeline>
<codeline lineno="372"><highlight class="comment">*<sp/>The<sp/>`ShGuiCharRawWriteFlags`<sp/>enumeration<sp/>defines<sp/>a<sp/>set<sp/>of<sp/>flags<sp/>used<sp/>to<sp/>specify<sp/>raw<sp/>write<sp/>operations<sp/>on<sp/>`shgui`<sp/>characters.<sp/>These<sp/>flags<sp/>indicate<sp/>which<sp/>properties<sp/>of<sp/>a<sp/>character<sp/>should<sp/>be<sp/>updated<sp/>during<sp/>the<sp/>write<sp/>operation.</highlight></codeline>
<codeline lineno="373"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref><sp/>{</highlight></codeline>
<codeline lineno="375" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a9e8780c0f1d6e15910d64fe05263fc1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a9e8780c0f1d6e15910d64fe05263fc1d" kindref="member">SH_GUI_CHAR_RAW_WRITE_X_POSITION</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Overwrite<sp/>the<sp/>X<sp/>position<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae3a40be9a1c9b8281e4e60c328dae912" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae3a40be9a1c9b8281e4e60c328dae912" kindref="member">SH_GUI_CHAR_RAW_WRITE_Y_POSITION</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Overwrite<sp/>the<sp/>Y<sp/>position<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a3476f71408522d535badffbf06231941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a3476f71408522d535badffbf06231941" kindref="member">SH_GUI_CHAR_RAW_WRITE_POSITION</ref><sp/><sp/><sp/>=<sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a9e8780c0f1d6e15910d64fe05263fc1d" kindref="member">SH_GUI_CHAR_RAW_WRITE_X_POSITION</ref><sp/>|<sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae3a40be9a1c9b8281e4e60c328dae912" kindref="member">SH_GUI_CHAR_RAW_WRITE_Y_POSITION</ref>,<sp/></highlight><highlight class="comment">/**&lt;<sp/>Overwrite<sp/>both<sp/>X<sp/>and<sp/>Y<sp/>positions<sp/>of<sp/>the<sp/>character.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae854485dbedc8fee33d5c59160111852" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04ae854485dbedc8fee33d5c59160111852" kindref="member">SH_GUI_CHAR_RAW_WRITE_SCALE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Overwrite<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a70247ed1143359ecb83b6d3233eb08ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a70247ed1143359ecb83b6d3233eb08ec" kindref="member">SH_GUI_CHAR_RAW_WRITE_Z_PRIORITY</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Overwrite<sp/>the<sp/>priority<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04aba76a553ca82aa925d81453fbe51a3f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04aba76a553ca82aa925d81453fbe51a3f4" kindref="member">SH_GUI_CHAR_RAW_WRITE_COLOR</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Overwrite<sp/>the<sp/>color<sp/>of<sp/>the<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a8afb17a1593f3f2146c568f8050dd1a7" kindref="member">SH_GUI_CHAR_RAW_MAX_ENUM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Maximum<sp/>value<sp/>for<sp/>enumeration<sp/>boundary<sp/>checking.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04a8afb17a1593f3f2146c568f8050dd1a7" refkind="member"><highlight class="normal">}<sp/><ref refid="shgui_8h_1a028083eb19dec4c6514679d168ce4d04" kindref="member">ShGuiCharRawWriteFlags</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>characters<sp/>supported<sp/>by<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="shgui_8h_1a4a24f48248ddbd2bfefb10795c5cda9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_CHAR_COUNT<sp/>2048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>size<sp/>(in<sp/>bytes)<sp/>required<sp/>to<sp/>store<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>characters.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="shgui_8h_1a072f09b6047aa85d165c13bb4302929b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_CHARS_RAW_SIZE<sp/>(SH_GUI_MAX_CHAR_COUNT<sp/>*<sp/>sizeof(ShGuiCharRaw))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="394"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>size<sp/>(in<sp/>bytes)<sp/>required<sp/>to<sp/>store<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>character<sp/>vertices.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="shgui_8h_1ab59f9ce6ba7e27aef4387426d7c2eb29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_CHARS_VERTEX_RAW_SIZE<sp/>(SH_GUI_MAX_CHAR_COUNT<sp/>*<sp/>sizeof(ShGuiCharVertexRaw))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Number<sp/>of<sp/>rows<sp/>in<sp/>the<sp/>`shgui`<sp/>character<sp/>grid.</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>This<sp/>constant<sp/>defines<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>the<sp/>`shgui`<sp/>character<sp/>grid.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>It<sp/>determines<sp/>the<sp/>vertical<sp/>size<sp/>of<sp/>the<sp/>grid<sp/>used<sp/>for<sp/>rendering<sp/>characters<sp/>in<sp/>`shgui`.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="shgui_8h_1a93a3e3d7e1c9f5e0b4e7bf33ed312533" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_CHAR_ROW_COUNT<sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Number<sp/>of<sp/>columns<sp/>in<sp/>the<sp/>`shgui`<sp/>character<sp/>grid.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>This<sp/>constant<sp/>defines<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>in<sp/>the<sp/>`shgui`<sp/>character<sp/>grid.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>It<sp/>determines<sp/>the<sp/>horizontal<sp/>size<sp/>of<sp/>the<sp/>grid<sp/>used<sp/>for<sp/>rendering<sp/>characters<sp/>in<sp/>`shgui`.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="shgui_8h_1addd4fc144ef8c68df47101ac070b0554" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_CHAR_COLUMN_COUNT<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="418"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="419"><highlight class="comment">*<sp/>@brief<sp/>Maximum<sp/>number<sp/>of<sp/>vertices<sp/>required<sp/>to<sp/>render<sp/>a<sp/>character<sp/>in<sp/>a<sp/>`shgui`<sp/>application.</highlight></codeline>
<codeline lineno="420"><highlight class="comment">*</highlight></codeline>
<codeline lineno="421"><highlight class="comment">*<sp/>The<sp/>`SH_GUI_MAX_CHAR_VERTEX_COUNT`<sp/>macro<sp/>defines<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>vertices<sp/>required<sp/>to<sp/>render<sp/>a<sp/>character<sp/>in<sp/>a<sp/>`shgui`<sp/>application.<sp/>It<sp/>is<sp/>calculated<sp/>as<sp/>7x7<sp/>vertices,<sp/>which<sp/>corresponds<sp/>to<sp/>a<sp/>7x7<sp/>grid<sp/>for<sp/>character<sp/>rendering.</highlight></codeline>
<codeline lineno="422"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="shgui_8h_1a23fc6656fadda5b3736d035c107f5c8d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_CHAR_VERTEX_COUNT<sp/>(SH_GUI_CHAR_ROW_COUNT<sp/>*<sp/>SH_GUI_CHAR_COLUMN_COUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="425"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="426"><highlight class="comment">*<sp/>@typedef<sp/>ShGuiCharVertexRaw</highlight></codeline>
<codeline lineno="427"><highlight class="comment">*<sp/>@brief<sp/>Type<sp/>for<sp/>storing<sp/>raw<sp/>character<sp/>vertex<sp/>data<sp/>in<sp/>a<sp/>`shgui`<sp/>application.</highlight></codeline>
<codeline lineno="428"><highlight class="comment">*</highlight></codeline>
<codeline lineno="429"><highlight class="comment">*<sp/>The<sp/>`ShGuiCharVertexRaw`<sp/>type<sp/>is<sp/>used<sp/>to<sp/>store<sp/>raw<sp/>character<sp/>vertex<sp/>data<sp/>in<sp/>a<sp/>`shgui`<sp/>application.<sp/>It<sp/>is<sp/>a<sp/>memory<sp/>block<sp/>of<sp/>float<sp/>values<sp/>with<sp/>a<sp/>size<sp/>corresponding<sp/>to<sp/>the<sp/>maximum<sp/>character<sp/>vertex<sp/>count.</highlight></codeline>
<codeline lineno="430"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="shgui_8h_1aa3c1dd28d77fc2ffc98e3ab08ba108cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="shgui_8h_1aa3c1dd28d77fc2ffc98e3ab08ba108cf" kindref="member">ShGuiCharVertexRaw</ref>[<ref refid="shgui_8h_1a23fc6656fadda5b3736d035c107f5c8d" kindref="member">SH_GUI_MAX_CHAR_VERTEX_COUNT</ref><sp/>*<sp/>3];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="433"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="434"><highlight class="comment">*<sp/>@brief<sp/>Maximum<sp/>size<sp/>in<sp/>bytes<sp/>required<sp/>to<sp/>store<sp/>character<sp/>vertex<sp/>data<sp/>in<sp/>a<sp/>`shgui`<sp/>application.</highlight></codeline>
<codeline lineno="435"><highlight class="comment">*</highlight></codeline>
<codeline lineno="436"><highlight class="comment">*<sp/>The<sp/>`SH_GUI_MAX_CHAR_VERTEX_SIZE`<sp/>macro<sp/>defines<sp/>the<sp/>maximum<sp/>size,<sp/>in<sp/>bytes,<sp/>required<sp/>to<sp/>store<sp/>character<sp/>vertex<sp/>data<sp/>in<sp/>a<sp/>`shgui`<sp/>application.<sp/>It<sp/>is<sp/>calculated<sp/>as<sp/>the<sp/>product<sp/>of<sp/>@ref<sp/>SH_GUI_MAX_CHAR_VERTEX_COUNT,<sp/>3<sp/>components<sp/>per<sp/>vertex<sp/>(x,<sp/>y,<sp/>z-priority),<sp/>and<sp/>4<sp/>bytes<sp/>per<sp/>component.</highlight></codeline>
<codeline lineno="437"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="shgui_8h_1a4b81cc241cba9d3054eb60a008f06fef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_MAX_CHAR_VERTEX_SIZE<sp/>(SH_GUI_MAX_CHAR_VERTEX_COUNT<sp/>*<sp/>3<sp/>*<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/>@brief<sp/>A<sp/>static<sp/>constant<sp/>representing<sp/>a<sp/>blank<sp/>GUI<sp/>character<sp/>vertex<sp/>raw<sp/>data.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="shgui_8h_1aa3c1dd28d77fc2ffc98e3ab08ba108cf" kindref="member">ShGuiCharVertexRaw</ref><sp/>_SH_GUI_NO_CHAR<sp/>=<sp/>{<sp/>0xbf800000<sp/>};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>alias<sp/>of<sp/>@ref<sp/>_SH_GUI_NO_CHAR.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="shgui_8h_1aeba98d2d9b495cf8ff34881773dae0a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_NO_CHAR<sp/>_SH_GUI_NO_CHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="shgui_8h_1a5a144d14b096ced597d496ba7bd626e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_SUPPORTED_CHAR_COUNT<sp/>70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="shgui_8h_1a3a8388255e3ce64dae017214d1884eea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SH_GUI_SUPPORTED_CHARS\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&apos;a&apos;,<sp/>&apos;b&apos;,<sp/>&apos;c&apos;,<sp/>&apos;d&apos;,<sp/>&apos;e&apos;,<sp/>&apos;f&apos;,<sp/>&apos;g&apos;,<sp/>&apos;h&apos;,<sp/>&apos;i&apos;,<sp/>&apos;j&apos;,<sp/>&apos;k&apos;,<sp/>&apos;l&apos;,<sp/>&apos;m&apos;,<sp/>&apos;n&apos;,<sp/>&apos;o&apos;,<sp/>&apos;p&apos;,<sp/>&apos;q&apos;,<sp/>&apos;r&apos;,<sp/>&apos;s&apos;,<sp/>&apos;t&apos;,<sp/>&apos;u&apos;,<sp/>&apos;v&apos;,<sp/>&apos;w&apos;,<sp/>&apos;x&apos;,<sp/>&apos;y&apos;,<sp/>&apos;z&apos;,\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&apos;0&apos;,<sp/>&apos;1&apos;,<sp/>&apos;2&apos;,<sp/>&apos;3&apos;,<sp/>&apos;4&apos;,<sp/>&apos;5&apos;,<sp/>&apos;6&apos;,<sp/>&apos;7&apos;,<sp/>&apos;8&apos;,<sp/>&apos;9&apos;,\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&apos;<sp/>&apos;,<sp/>&apos;\t&apos;,<sp/>&apos;\n&apos;,\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&apos;.&apos;,<sp/>&apos;,&apos;,<sp/>&apos;!&apos;,<sp/>&apos;?&apos;,<sp/>&apos;:&apos;,<sp/>&apos;;&apos;,<sp/>&apos;/&apos;,<sp/>&apos;\\&apos;,<sp/>&apos;_&apos;,<sp/>&apos;-&apos;,<sp/>&apos;|&apos;,<sp/>&apos;&amp;&apos;,<sp/>&apos;%&apos;,<sp/>&apos;$&apos;,<sp/>&apos;#&apos;,<sp/>&apos;@&apos;,<sp/>&apos;\&apos;&apos;,<sp/>&apos;&quot;&apos;,<sp/>&apos;+&apos;,<sp/>&apos;-&apos;,<sp/>&apos;*&apos;,<sp/>&apos;/&apos;,<sp/>&apos;=&apos;,<sp/>&apos;&lt;&apos;,<sp/>&apos;&gt;&apos;,<sp/>&apos;(&apos;,<sp/>&apos;)&apos;,<sp/>&apos;[&apos;,<sp/>&apos;]&apos;,<sp/>&apos;~&apos;,<sp/>&apos;`&apos;\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor">//space,<sp/>tab<sp/>and<sp/>newline<sp/>not<sp/>made,<sp/>just<sp/>change<sp/>the<sp/>offset</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="461" refid="shgui_8h_1a9df9a648db55fa01ce26e2fc81028da1" refkind="member"><highlight class="preprocessor">typedef<sp/>float<sp/>ShGuiCharMesh[49];//7x7<sp/>matrix<sp/>grid</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>used<sp/>to<sp/>copy<sp/>GUI<sp/>character<sp/>vertices<sp/>from<sp/>a<sp/>source<sp/>memory<sp/>block<sp/>to<sp/>a<sp/>destination.</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>@param<sp/>dst<sp/>The<sp/>destination<sp/>array<sp/>where<sp/>character<sp/>vertices<sp/>will<sp/>be<sp/>copied.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>@param<sp/>src<sp/>The<sp/>source<sp/>array<sp/>containing<sp/>the<sp/>original<sp/>character<sp/>vertices.</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="shgui_8h_1a23f8f538ba75efc36f022a531aa6a2da" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_LOAD_CHAR_VERTICES(dst,<sp/>src)\</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(dst,<sp/>src,<sp/>SH_GUI_MAX_CHAR_VERTEX_SIZE)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>@struct<sp/>ShGuiCharInfos</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Structure<sp/>containing<sp/>information<sp/>about<sp/>GUI<sp/>characters.</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="struct_sh_gui_char_infos" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/>ShGuiCharInfos<sp/>{</highlight></codeline>
<codeline lineno="481" refid="struct_sh_gui_char_infos_1a8771910603e19c7d7c3a82e2d4682eaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_scale_factor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>The<sp/>scale<sp/>factor<sp/>applied<sp/>to<sp/>all<sp/>characters<sp/>in<sp/>the<sp/>GUI.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="482" refid="struct_sh_gui_char_infos_1a1e4d5eca547a6edfa0b2ca9611fd59a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>The<sp/>total<sp/>count<sp/>of<sp/>characters<sp/>in<sp/>the<sp/>GUI.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="483" refid="struct_sh_gui_char_infos_1a25d6aa61f2a0988be589bd305f329dfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharRaw<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chars_raw[SH_GUI_MAX_CHAR_COUNT];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Memory<sp/>block<sp/>storing<sp/>raw<sp/>data<sp/>for<sp/>each<sp/>GUI<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="484" refid="struct_sh_gui_char_infos_1a56359abe4fe835a6fc33aee8fc10f38b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharVertexRaw<sp/><sp/><sp/><sp/><sp/><sp/>chars_vertex_raw[SH_GUI_MAX_CHAR_COUNT];<sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Memory<sp/>block<sp/>storing<sp/>raw<sp/>vertex<sp/>data<sp/>for<sp/>each<sp/>GUI<sp/>character.<sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="485" refid="struct_sh_gui_char_infos_1a21006477553a560623f450e8a978989d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharRawWriteFlags<sp/><sp/>chars_raw_write_flags[SH_GUI_MAX_CHAR_COUNT];<sp/>/**&lt;<sp/>Memory<sp/>block<sp/>storing<sp/>write<sp/>flags<sp/>for<sp/>each<sp/>GUI<sp/>character.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="486" refid="struct_sh_gui_char_infos_1a1886583614bd527fcc9d8bd8625241ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharVertexRaw<sp/><sp/><sp/><sp/><sp/><sp/>chars_font_mesh[SH_GUI_SUPPORTED_CHAR_COUNT];<sp/>/**&lt;<sp/>Memory<sp/>block<sp/>storing<sp/>the<sp/>vertex<sp/>position<sp/>for<sp/>each<sp/>character<sp/>type<sp/>*/</highlight></codeline>
<codeline lineno="487" refid="shgui_8h_1a62b381c08e8fbe7467ac8b05bd572290" refkind="member"><highlight class="normal">}<sp/>ShGuiCharInfos;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>staging<sp/>size<sp/>(in<sp/>bytes)<sp/>for<sp/>regions,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_MAX_REGIONS_RAW_SIZE.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="shgui_8h_1a4d2120caffad9ee1bf811a19eea37269" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGIONS_RAW_STAGING_SIZE<sp/>SH_GUI_MAX_REGIONS_RAW_SIZE</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="496"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>staging<sp/>size<sp/>(in<sp/>bytes)<sp/>for<sp/>characters,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_MAX_CHARS_RAW_SIZE.</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="shgui_8h_1a51010a400aa770864d114abfb8b41622" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_RAW_STAGING_SIZE<sp/>SH_GUI_MAX_CHARS_RAW_SIZE</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>staging<sp/>size<sp/>(in<sp/>bytes)<sp/>for<sp/>character<sp/>vertices,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_MAX_CHARS_VERTEX_RAW_SIZE.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="shgui_8h_1ae080d7a135d5a7fb3a1715100d3bfc94" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE<sp/>SH_GUI_MAX_CHARS_VERTEX_RAW_SIZE</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>offset<sp/>for<sp/>raw<sp/>staging<sp/>regions,<sp/>set<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="shgui_8h_1a0b457acfb16d67f1958108ccaeed794a" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGIONS_RAW_STAGING_OFFSET<sp/>(0)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="511"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>offset<sp/>for<sp/>raw<sp/>staging<sp/>characters.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="shgui_8h_1ab4dc7edb3d20d76a9ed5177590e5c732" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_RAW_STAGING_OFFSET<sp/>(SH_GUI_REGIONS_RAW_STAGING_OFFSET<sp/>+<sp/>SH_GUI_REGIONS_RAW_STAGING_SIZE)<sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="516"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>offset<sp/>for<sp/>raw<sp/>staging<sp/>character<sp/>vertices.</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="shgui_8h_1a05a9021eff100711687616a85c3f29fa" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET<sp/>(SH_GUI_CHARS_RAW_STAGING_OFFSET<sp/>+<sp/>SH_GUI_CHARS_RAW_STAGING_SIZE)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="521"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>total<sp/>size<sp/>of<sp/>the<sp/>staging<sp/>buffer.</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="shgui_8h_1aeeb883db8b5c074015f5b485669d8e6f" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_STAGING_BUFFER_SIZE<sp/>(SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET<sp/>+<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="526"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>size<sp/>(in<sp/>bytes)<sp/>for<sp/>destination<sp/>regions,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_REGIONS_RAW_STAGING_SIZE.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="shgui_8h_1af1ac2e0d8095dc6e55b9450c5ce41e70" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGIONS_RAW_DST_SIZE<sp/>SH_GUI_REGIONS_RAW_STAGING_SIZE</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="531"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>size<sp/>(in<sp/>bytes)<sp/>for<sp/>destination<sp/>characters,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_CHARS_RAW_STAGING_SIZE.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="shgui_8h_1a0e1ca97b166bf10f245f217cb71d4880" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_RAW_DST_SIZE<sp/>SH_GUI_CHARS_RAW_STAGING_SIZE</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="536"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>raw<sp/>size<sp/>(in<sp/>bytes)<sp/>for<sp/>destination<sp/>character<sp/>vertices,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE.</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="shgui_8h_1adeaac58689f60e3eb9a1cf54d2e8741f" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_VERTEX_RAW_DST_SIZE<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_SIZE</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="541"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>offset<sp/>for<sp/>destination<sp/>regions,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_REGIONS_RAW_STAGING_OFFSET.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="shgui_8h_1a8182f6a14fda93b2449fae73300c869e" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGIONS_RAW_DST_OFFSET<sp/>SH_GUI_REGIONS_RAW_STAGING_OFFSET</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>offset<sp/>for<sp/>destination<sp/>characters,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_CHARS_RAW_STAGING_OFFSET.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="shgui_8h_1a32f7d19d19f644fb0a1086b3c550c060" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_RAW_DST_OFFSET<sp/>SH_GUI_CHARS_RAW_STAGING_OFFSET</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="551"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>offset<sp/>for<sp/>destination<sp/>character<sp/>vertices,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET.</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="shgui_8h_1ae56939ade6a21a28edd6df0bbd386b63" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHARS_VERTEX_RAW_DST_OFFSET<sp/>SH_GUI_CHARS_VERTEX_RAW_STAGING_OFFSET</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>@brief<sp/>The<sp/>total<sp/>size<sp/>of<sp/>the<sp/>destination<sp/>buffer,<sp/>equivalent<sp/>to<sp/>@ref<sp/>SH_GUI_STAGING_BUFFER_SIZE.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="shgui_8h_1a30dc21da6c2d11829d996525f16dac56" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_DST_BUFFER_SIZE<sp/>SH_GUI_STAGING_BUFFER_SIZE</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="563"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>representing<sp/>the<sp/>SPIR-V<sp/>code<sp/>for<sp/>the<sp/>GUI<sp/>region<sp/>vertex<sp/>shader.<sp/>It<sp/>is<sp/>defined<sp/>as<sp/>the<sp/>corresponding<sp/>static<sp/>constant.</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="shgui_8h_1a5add4b3d38279d526203c19f339e142c" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGION_VERT_SPV<sp/>_SH_GUI_REGION_VERT_SPV</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="568"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>representing<sp/>the<sp/>SPIR-V<sp/>code<sp/>for<sp/>the<sp/>GUI<sp/>region<sp/>fragment<sp/>shader.<sp/>It<sp/>is<sp/>defined<sp/>as<sp/>the<sp/>corresponding<sp/>static<sp/>constant.</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="shgui_8h_1a90511a3863b7b0c61f89aaace28ef5d2" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGION_FRAG_SPV<sp/>_SH_GUI_REGION_FRAG_SPV</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="573"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>representing<sp/>the<sp/>SPIR-V<sp/>code<sp/>for<sp/>the<sp/>GUI<sp/>character<sp/>vertex<sp/>shader.<sp/>It<sp/>is<sp/>defined<sp/>as<sp/>the<sp/>corresponding<sp/>static<sp/>constant.</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576" refid="shgui_8h_1a3b42506a62dfaf655b853d1911d9e79f" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHAR_VERT_SPV<sp/><sp/><sp/>_SH_GUI_CHAR_VERT_SPV</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Macro<sp/>representing<sp/>the<sp/>SPIR-V<sp/>code<sp/>for<sp/>the<sp/>GUI<sp/>character<sp/>fragment<sp/>shader.<sp/>It<sp/>is<sp/>defined<sp/>as<sp/>the<sp/>corresponding<sp/>static<sp/>constant.</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="shgui_8h_1ae22f14c985c200aecb8bc508fca51ff3" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_CHAR_FRAG_SPV<sp/><sp/><sp/>_SH_GUI_CHAR_FRAG_SPV</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="586"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>@struct<sp/>ShGui</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Structure<sp/>representing<sp/>the<sp/>main<sp/>context<sp/>for<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>The<sp/>ShGui<sp/>structure<sp/>encapsulates<sp/>the<sp/>core<sp/>components<sp/>of<sp/>the<sp/>GUI,<sp/>including</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>the<sp/>GUI<sp/>core<sp/>and<sp/>Vulkan<sp/>components,<sp/>input<sp/>handling,<sp/>buffers<sp/>for<sp/>staging<sp/>and<sp/>destination,<sp/></highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>regions<sp/>and<sp/>characters<sp/>information,<sp/>and<sp/>Vulkan<sp/>pipelines<sp/>for<sp/>regions</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>and<sp/>characters.</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="struct_sh_gui" refkind="compound"><highlight class="normal">typedef<sp/>struct<sp/>ShGui<sp/>{</highlight></codeline>
<codeline lineno="596" refid="struct_sh_gui_1ae1a9bd539609efd8dc5eee78c79542eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCore<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Core<sp/>components<sp/>of<sp/>the<sp/>GUI.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="597" refid="struct_sh_gui_1aa3d73439ab5a988ad58079dc6acc969d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiInputs<sp/><sp/><sp/><sp/><sp/><sp/>inputs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Input<sp/>handling<sp/>for<sp/>the<sp/>GUI.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="598" refid="struct_sh_gui_1a1718ab4093d6f001c80b9a7236589c26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>staging_buffer;<sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Vulkan<sp/>buffer<sp/>for<sp/>staging<sp/>data.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="599" refid="struct_sh_gui_1af74c20cc0dac8953e3d1afd49a06b46a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDeviceMemory<sp/><sp/><sp/>staging_memory;<sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Vulkan<sp/>device<sp/>memory<sp/>for<sp/>staging<sp/>data.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="600" refid="struct_sh_gui_1a2552ef4ade4c483639f84991d6134f4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_buffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Vulkan<sp/>buffer<sp/>for<sp/>destination<sp/>data.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="601" refid="struct_sh_gui_1a451227f9b0af3e6a88e69a00a488573c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDeviceMemory<sp/><sp/><sp/>dst_memory;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Vulkan<sp/>device<sp/>memory<sp/>for<sp/>destination<sp/>data.<sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="602" refid="struct_sh_gui_1a24ff16b9dd764acc1d84e8bdf6e26234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiRegionInfos<sp/>region_infos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Information<sp/>about<sp/>GUI<sp/>regions.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="603" refid="struct_sh_gui_1a0a51c495482a5a66f0a7732d6cfd02e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharInfos<sp/><sp/><sp/>char_infos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Information<sp/>about<sp/>GUI<sp/>characters.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="604" refid="struct_sh_gui_1abec82fcd979921ead798d0da2d3aea61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShVkPipelinePool<sp/>pipeline_pool;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>shvulkan<sp/>pipeline<sp/>pool<sp/>for<sp/>managing<sp/>pipelines.<sp/>*/</highlight></codeline>
<codeline lineno="605" refid="struct_sh_gui_1abeac3f0695e00b4b36c36ac6378abea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShVkPipeline<sp/><sp/><sp/><sp/><sp/>region_pipeline;<sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>shvulkan<sp/>pipeline<sp/>for<sp/>GUI<sp/>regions.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="606" refid="struct_sh_gui_1a7ebe3a9ebdad2f74772afa37eb4e26e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ShVkPipeline<sp/><sp/><sp/><sp/><sp/>char_pipeline;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>shvulkan<sp/>pipeline<sp/>for<sp/>GUI<sp/>characters.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="607" refid="shgui_8h_1a00e46b1be1415e620c0379b7183a2fe6" refkind="member"><highlight class="normal">}<sp/>ShGui;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="610"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="611"><highlight class="comment">*<sp/>@brief<sp/>Allocates<sp/>memory<sp/>for<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="612"><highlight class="comment">*</highlight></codeline>
<codeline lineno="613"><highlight class="comment">*<sp/>@return<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>newly<sp/>allocated<sp/>instance<sp/>of<sp/>the<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="614"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="shgui_8h_1aedae4a024a7e3481cebc0312408abb8e" refkind="member"><highlight class="normal">#define<sp/>shAllocateGui()<sp/>((ShGui*)calloc(1,<sp/>sizeof(ShGui)))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="619"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="620"><highlight class="comment">*<sp/>@brief<sp/>Initializes<sp/>the<sp/>GUI<sp/>with<sp/>the<sp/>provided<sp/>`ShGuiCore`<sp/>structure.</highlight></codeline>
<codeline lineno="621"><highlight class="comment">*</highlight></codeline>
<codeline lineno="622"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="623"><highlight class="comment">*<sp/>@param<sp/>core<sp/><sp/><sp/><sp/><sp/>A<sp/>valid<sp/>@ref<sp/>ShGuiCore<sp/>structure<sp/>containing<sp/>information<sp/>about<sp/>the<sp/>GUI<sp/>core<sp/>components.</highlight></codeline>
<codeline lineno="624"><highlight class="comment">*</highlight></codeline>
<codeline lineno="625"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="626"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="shgui_8h_1a6a143e521310c18566214bd5979a81e1" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>shGuiInit(</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCore<sp/>core</highlight></codeline>
<codeline lineno="630"><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="633"><highlight class="comment">*<sp/>@brief<sp/>Sets<sp/>the<sp/>Vulkan<sp/>surface<sp/>for<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="634"><highlight class="comment">*</highlight></codeline>
<codeline lineno="635"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="636"><highlight class="comment">*<sp/>@param<sp/>surface<sp/><sp/><sp/><sp/>A<sp/>valid<sp/>Vulkan<sp/>surface<sp/>handle,<sp/>see<sp/>the<sp/>Vulkan<sp/>API<sp/>documentation<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="637"><highlight class="comment">*</highlight></codeline>
<codeline lineno="638"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="639"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="shgui_8h_1a52453bea0f771d063f9eff32311158ee" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>shGuiSetSurface(</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/>surface</highlight></codeline>
<codeline lineno="643"><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="645"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="646"><highlight class="comment">*<sp/>@brief<sp/>Sets<sp/>the<sp/>Vulkan<sp/>render<sp/>pass<sp/>for<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="647"><highlight class="comment">*</highlight></codeline>
<codeline lineno="648"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="649"><highlight class="comment">*<sp/>@param<sp/>renderpass<sp/><sp/><sp/><sp/>A<sp/>valid<sp/>Vulkan<sp/>render<sp/>pass<sp/>handle,<sp/>see<sp/>the<sp/>Vulkan<sp/>API<sp/>documentation<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="650"><highlight class="comment">*</highlight></codeline>
<codeline lineno="651"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="652"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="shgui_8h_1ac4149238a0577b942b1ded2c2703ddf9" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>shGuiSetRenderpass(</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderPass<sp/>renderpass</highlight></codeline>
<codeline lineno="656"><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="658"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="659"><highlight class="comment">*<sp/>@brief<sp/>Returns<sp/>the<sp/>available<sp/>heap<sp/>size<sp/>for<sp/>allocating<sp/>memory,<sp/>taking<sp/>in<sp/>consideration<sp/>the<sp/>host<sp/>heap<sp/>memory<sp/>(RAM)<sp/>and<sp/>the<sp/>GPU<sp/>heap<sp/>memory<sp/>(VRAM).</highlight></codeline>
<codeline lineno="660"><highlight class="comment">*</highlight></codeline>
<codeline lineno="661"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="662"><highlight class="comment">*</highlight></codeline>
<codeline lineno="663"><highlight class="comment">*<sp/>@return<sp/>The<sp/>available<sp/>heap<sp/>size.</highlight></codeline>
<codeline lineno="664"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="shgui_8h_1af9ebb886cfa8e01160dd1c093ef3df26" refkind="member"><highlight class="normal">extern<sp/>uint32_t<sp/>SH_GUI_CALL<sp/>shGuiGetAvailableHeap(</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="667"><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="669"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="670"><highlight class="comment">*<sp/>@brief<sp/>Allocates<sp/>memory<sp/>for<sp/>the<sp/>GUI<sp/>components.</highlight></codeline>
<codeline lineno="671"><highlight class="comment">*</highlight></codeline>
<codeline lineno="672"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="673"><highlight class="comment">*</highlight></codeline>
<codeline lineno="674"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="675"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="shgui_8h_1abd1993e44d2cf04573e66cfd02a98fb8" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiAllocateMemory(</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="678"><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="680"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="681"><highlight class="comment">*<sp/>@brief<sp/>Reads<sp/>a<sp/>binary<sp/>file<sp/>and<sp/>returns<sp/>the<sp/>binary<sp/>data.</highlight></codeline>
<codeline lineno="682"><highlight class="comment">*</highlight></codeline>
<codeline lineno="683"><highlight class="comment">*<sp/>@param<sp/>path<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>path<sp/>to<sp/>the<sp/>binary<sp/>file.</highlight></codeline>
<codeline lineno="684"><highlight class="comment">*<sp/>@param<sp/>p_code_size<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>variable<sp/>to<sp/>store<sp/>the<sp/>size<sp/>of<sp/>the<sp/>binary<sp/>file.</highlight></codeline>
<codeline lineno="685"><highlight class="comment">*</highlight></codeline>
<codeline lineno="686"><highlight class="comment">*<sp/>@return<sp/>The<sp/>binary<sp/>data<sp/>located<sp/>in<sp/>a<sp/>heap-allocated<sp/>block.<sp/>Needs<sp/>to<sp/>be<sp/>freed<sp/>after<sp/>usage.</highlight></codeline>
<codeline lineno="687"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="shgui_8h_1ae479c4197e09fecd279f1d16438e4391" refkind="member"><highlight class="normal">extern<sp/>char*<sp/>SH_GUI_CALL<sp/>shGuiReadBinary(</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>path,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/><sp/><sp/>p_code_size</highlight></codeline>
<codeline lineno="691"><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="693"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="694"><highlight class="comment">*<sp/>@brief<sp/>Allocates<sp/>resources<sp/>for<sp/>the<sp/>GUI<sp/>pipelines.</highlight></codeline>
<codeline lineno="695"><highlight class="comment">*</highlight></codeline>
<codeline lineno="696"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="697"><highlight class="comment">*<sp/>@param<sp/>swapchain_image_count<sp/>The<sp/>number<sp/>of<sp/>swapchain<sp/>images.</highlight></codeline>
<codeline lineno="698"><highlight class="comment">*</highlight></codeline>
<codeline lineno="699"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="700"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701" refid="shgui_8h_1a33cbc466e9e476bbb573e99ca814cda8" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiAllocatePipelineResources(</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>swapchain_image_count</highlight></codeline>
<codeline lineno="704"><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="706"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="707"><highlight class="comment">*<sp/>@brief<sp/>Builds<sp/>the<sp/>region<sp/>pipeline<sp/>using<sp/>the<sp/>provided<sp/>vertex<sp/>and<sp/>fragment<sp/>shader<sp/>paths.</highlight></codeline>
<codeline lineno="708"><highlight class="comment">*</highlight></codeline>
<codeline lineno="709"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="710"><highlight class="comment">*<sp/>@param<sp/>vertex_shader_path<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>path<sp/>to<sp/>the<sp/>vertex<sp/>shader<sp/>file<sp/>in<sp/>the<sp/>spv<sp/>file<sp/>format.</highlight></codeline>
<codeline lineno="711"><highlight class="comment">*<sp/>@param<sp/>fragment_shader_path<sp/><sp/><sp/><sp/>The<sp/>path<sp/>to<sp/>the<sp/>fragment<sp/>shader<sp/>file<sp/>in<sp/>the<sp/>spv<sp/>file<sp/>format.</highlight></codeline>
<codeline lineno="712"><highlight class="comment">*</highlight></codeline>
<codeline lineno="713"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="714"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="shgui_8h_1af66d73a5b488af9c0941e06386891461" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiBuildRegionPipeline(</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>vertex_shader_path,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>fragment_shader_path</highlight></codeline>
<codeline lineno="719"><highlight class="normal">);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="721"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="722"><highlight class="comment">*<sp/>@brief<sp/>Builds<sp/>the<sp/>char<sp/>pipeline<sp/>using<sp/>the<sp/>provided<sp/>vertex<sp/>and<sp/>fragment<sp/>shader<sp/>paths.</highlight></codeline>
<codeline lineno="723"><highlight class="comment">*</highlight></codeline>
<codeline lineno="724"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="725"><highlight class="comment">*<sp/>@param<sp/>vertex_shader_path<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>path<sp/>to<sp/>the<sp/>vertex<sp/>shader<sp/>file<sp/>in<sp/>the<sp/>spv<sp/>file<sp/>format.</highlight></codeline>
<codeline lineno="726"><highlight class="comment">*<sp/>@param<sp/>fragment_shader_path<sp/><sp/><sp/><sp/>The<sp/>path<sp/>to<sp/>the<sp/>fragment<sp/>shader<sp/>file<sp/>in<sp/>the<sp/>spv<sp/>file<sp/>format.</highlight></codeline>
<codeline lineno="727"><highlight class="comment">*</highlight></codeline>
<codeline lineno="728"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="729"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="shgui_8h_1a98b278cecd8af517d5ae05406d3e61de" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiBuildCharPipeline(</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>vertex_shader_path,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>fragment_shader_path</highlight></codeline>
<codeline lineno="734"><highlight class="normal">);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="736"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="737"><highlight class="comment">*<sp/>@brief<sp/>Destroys<sp/>the<sp/>resources<sp/>allocated<sp/>for<sp/>the<sp/>GUI<sp/>Vulkan<sp/>pipelines.</highlight></codeline>
<codeline lineno="738"><highlight class="comment">*</highlight></codeline>
<codeline lineno="739"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="740"><highlight class="comment">*</highlight></codeline>
<codeline lineno="741"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="742"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="shgui_8h_1a146dc717bef3a5f08ca3188a0da5637f" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiDestroyPipelineResources(</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="745"><highlight class="normal">);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="747"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="748"><highlight class="comment">*<sp/>@brief<sp/>Destroys<sp/>the<sp/>GUI<sp/>Vulkan<sp/>pipelines.</highlight></codeline>
<codeline lineno="749"><highlight class="comment">*</highlight></codeline>
<codeline lineno="750"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="751"><highlight class="comment">*</highlight></codeline>
<codeline lineno="752"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="753"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="shgui_8h_1a93ded455297322869e9c42ab4e00d63d" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiDestroyPipelines(</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="756"><highlight class="normal">);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="758"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="759"><highlight class="comment">*<sp/>@brief<sp/>Writes<sp/>memory<sp/>to<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="760"><highlight class="comment">*</highlight></codeline>
<codeline lineno="761"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="762"><highlight class="comment">*<sp/>@param<sp/>transfer_cmd_buffer<sp/><sp/>A<sp/>Vulkan<sp/>command<sp/>buffer<sp/>valid<sp/>for<sp/>memory<sp/>transfer<sp/>purposes,<sp/>for<sp/>more<sp/>information<sp/>see<sp/>the<sp/>Vulkan<sp/>API<sp/>documentation.</highlight></codeline>
<codeline lineno="763"><highlight class="comment">*<sp/>@param<sp/>begin_cmd_buffer<sp/><sp/><sp/><sp/><sp/>A<sp/>byte<sp/>indicating<sp/>whether<sp/>to<sp/>start<sp/>recording<sp/>the<sp/>command<sp/>buffer,<sp/>for<sp/>more<sp/>information<sp/>see<sp/>the<sp/>Vulkan<sp/>API<sp/>documentation.</highlight></codeline>
<codeline lineno="764"><highlight class="comment">*</highlight></codeline>
<codeline lineno="765"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="766"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="shgui_8h_1af721c0d4b7fee360f542c155fa66225e" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiWriteMemory(</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>transfer_cmd_buffer,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_cmd_buffer</highlight></codeline>
<codeline lineno="771"><highlight class="normal">);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="773"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="774"><highlight class="comment">*<sp/>@brief<sp/>Resizes<sp/>the<sp/>GUI<sp/>interface.</highlight></codeline>
<codeline lineno="775"><highlight class="comment">*</highlight></codeline>
<codeline lineno="776"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="777"><highlight class="comment">*<sp/>@param<sp/>last_width<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>previous<sp/>width<sp/>of<sp/>the<sp/>interface.</highlight></codeline>
<codeline lineno="778"><highlight class="comment">*<sp/>@param<sp/>last_height<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>previous<sp/>height<sp/>of<sp/>the<sp/>interface.</highlight></codeline>
<codeline lineno="779"><highlight class="comment">*<sp/>@param<sp/>current_width<sp/><sp/><sp/><sp/><sp/>The<sp/>current<sp/>width<sp/>of<sp/>the<sp/>interface.</highlight></codeline>
<codeline lineno="780"><highlight class="comment">*<sp/>@param<sp/>current_height<sp/><sp/><sp/><sp/>The<sp/>current<sp/>height<sp/>of<sp/>the<sp/>interface.</highlight></codeline>
<codeline lineno="781"><highlight class="comment">*</highlight></codeline>
<codeline lineno="782"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="783"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="shgui_8h_1aa3af600ca32b31b38921432b71a745b3" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiResizeInterface(</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>last_width,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>last_height,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_width,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_height</highlight></codeline>
<codeline lineno="790"><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="793"><highlight class="comment">*<sp/>@brief<sp/>Releases<sp/>the<sp/>memory<sp/>allocated<sp/>for<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="794"><highlight class="comment">*</highlight></codeline>
<codeline lineno="795"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="796"><highlight class="comment">*</highlight></codeline>
<codeline lineno="797"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="798"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799" refid="shgui_8h_1ac44e13be5c48989e420218e1dd467897" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiReleaseMemory(</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="801"><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="804"><highlight class="comment">*<sp/>@brief<sp/>Renders<sp/>the<sp/>GUI<sp/>using<sp/>the<sp/>provided<sp/>command<sp/>buffer<sp/>and<sp/>swapchain<sp/>image<sp/>index.</highlight></codeline>
<codeline lineno="805"><highlight class="comment">*</highlight></codeline>
<codeline lineno="806"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="807"><highlight class="comment">*<sp/>@param<sp/>cmd_buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>Vulkan<sp/>command<sp/>buffer<sp/>valid<sp/>for<sp/>graphics<sp/>operations,<sp/>see<sp/>the<sp/>Vulkan<sp/>API<sp/>documentation<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="808"><highlight class="comment">*<sp/>@param<sp/>swapchain_image_idx<sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>current<sp/>swapchain<sp/>image.</highlight></codeline>
<codeline lineno="809"><highlight class="comment">*</highlight></codeline>
<codeline lineno="810"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="811"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="shgui_8h_1aecd811e0d62c7500dc8cb86f75e4634b" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiRender(</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>cmd_buffer,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapchain_image_idx</highlight></codeline>
<codeline lineno="816"><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="818"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="819"><highlight class="comment">*<sp/>@brief<sp/>Submits<sp/>the<sp/>recorded<sp/>inputs<sp/>to<sp/>the<sp/>main<sp/>@ref<sp/>ShGui<sp/>handle.</highlight></codeline>
<codeline lineno="820"><highlight class="comment">*</highlight></codeline>
<codeline lineno="821"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="822"><highlight class="comment">*</highlight></codeline>
<codeline lineno="823"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="824"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="shgui_8h_1a3c531649d79d3e4c4262898161a3aaf3" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiSubmitInputs(</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="827"><highlight class="normal">);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="829"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="830"><highlight class="comment">*<sp/>@brief<sp/>Releases<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="831"><highlight class="comment">*</highlight></codeline>
<codeline lineno="832"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="833"><highlight class="comment">*</highlight></codeline>
<codeline lineno="834"><highlight class="comment">*<sp/>@return<sp/>A<sp/>result<sp/>code<sp/>indicating<sp/>the<sp/>success<sp/>or<sp/>failure<sp/>of<sp/>the<sp/>function<sp/>call.</highlight></codeline>
<codeline lineno="835"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="shgui_8h_1a609c7b08fddd09c7885395decf4a4e96" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiRelease(</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="838"><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="842"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*<sp/>@enum<sp/>ShGuiWidgetFlags</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Represents<sp/>different<sp/>flags<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>configure<sp/>a<sp/>GUI<sp/>widget.</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01" refkind="member"><highlight class="normal">typedef<sp/>enum<sp/>ShGuiWidgetFlags<sp/>{</highlight></codeline>
<codeline lineno="847" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a904273812b5ee5576c4a0d9db53e0a70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_CENTER_WIDTH<sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/>/**&lt;<sp/>Center<sp/>the<sp/>widget<sp/>horizontally.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="848" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01afb648a930c3598a8f4f28379278d3f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_CENTER_HEIGHT<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/>/**&lt;<sp/>Center<sp/>the<sp/>widget<sp/>vertically.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="849" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a873924271d75cf44e6115deae23155a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_EDGE_LEFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/>/**&lt;<sp/>Place<sp/>the<sp/>widget<sp/>at<sp/>the<sp/>left<sp/>edge.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="850" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01aae3169438dda6cd814f2996026d7ed75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_EDGE_RIGHT<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/>/**&lt;<sp/>Place<sp/>the<sp/>widget<sp/>at<sp/>the<sp/>right<sp/>edge.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="851" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a0e0f828dbf352a4da6085454fe025224" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_EDGE_TOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/>/**&lt;<sp/>Place<sp/>the<sp/>widget<sp/>at<sp/>the<sp/>top<sp/>edge.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="852" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a5041f5efe1cf9841ae249621d8508332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_EDGE_BOTTOM<sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5,<sp/>/**&lt;<sp/>Place<sp/>the<sp/>widget<sp/>at<sp/>the<sp/>bottom<sp/>edge.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="853" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01ac782c5b6d1a8a7e1b5ddde85eb2d0eca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_PIXELS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>6,<sp/>/**&lt;<sp/>Specify<sp/>widget<sp/>dimensions<sp/>in<sp/>pixels.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="854" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a4830e45ad979bd2f6310728db43aa2eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_RELATIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>7,<sp/>/**&lt;<sp/>Specify<sp/>widget<sp/>dimensions<sp/>as<sp/>relative<sp/>percentages.<sp/>*/</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_WIDGET_FLAGS_MAX_ENUM<sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Maximum<sp/>value<sp/>for<sp/>enumeration<sp/>boundary<sp/>checking.<sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="856" refid="shgui_8h_1a0816f0c83c82d334cc0d58ba47f17a01a4c95d55530f2d0f89762ae63974932a3" refkind="member"><highlight class="normal">}<sp/>ShGuiWidgetFlags;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="858"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/>*<sp/>@enum<sp/>ShGuiWriteFlags</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Represents<sp/>different<sp/>flags<sp/>for<sp/>writing<sp/>specific<sp/>properties<sp/>of<sp/>a<sp/>GUI<sp/>element.</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6" refkind="member"><highlight class="normal">typedef<sp/>enum<sp/>ShGuiWriteFlags<sp/>{</highlight></codeline>
<codeline lineno="863" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6aa83c903abb74c0aab72c803734acbc8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,<sp/>/**&lt;<sp/>Write<sp/>the<sp/>width<sp/>property<sp/>of<sp/>a<sp/>GUI<sp/>element.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="864" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6af99a77a1825406ae93ab75ab6badfe69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,<sp/>/**&lt;<sp/>Write<sp/>the<sp/>height<sp/>property<sp/>of<sp/>a<sp/>GUI<sp/>element.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="865" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6a1e084ce7a8a4c7ff50c92323887a435b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_POSITION_X<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,<sp/>/**&lt;<sp/>Write<sp/>the<sp/>X-coordinate<sp/>property<sp/>of<sp/>a<sp/>GUI<sp/>element.<sp/>*/</highlight></codeline>
<codeline lineno="866" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6a8df2922571a7a90591a33e6efbb99bca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_POSITION_Y<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,<sp/>/**&lt;<sp/>Write<sp/>the<sp/>Y-coordinate<sp/>property<sp/>of<sp/>a<sp/>GUI<sp/>element.<sp/>*/</highlight></codeline>
<codeline lineno="867" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6acbe072a8aac1484a75910622fac8e4e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_TITLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,<sp/>/**&lt;<sp/>Write<sp/>the<sp/>title<sp/>property<sp/>of<sp/>a<sp/>GUI<sp/>element.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>SH_GUI_WRITE_FLAGS_MAX_ENUM<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**&lt;<sp/>Maximum<sp/>value<sp/>for<sp/>enumeration<sp/>boundary<sp/>checking.<sp/><sp/>*/</highlight></codeline>
<codeline lineno="869" refid="shgui_8h_1a4f4a1b0f1828458485ea5f2401d4d8f6a711eab33fb56908b4df8b8e69d205413" refkind="member"><highlight class="normal">}<sp/>ShGuiWriteFlags;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="874"><highlight class="comment">*<sp/>@brief<sp/>The<sp/>z-priority<sp/>for<sp/>text<sp/>elements<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="875"><highlight class="comment">*</highlight></codeline>
<codeline lineno="876"><highlight class="comment">*<sp/>This<sp/>macro<sp/>defines<sp/>the<sp/>z-priority<sp/>for<sp/>text<sp/>elements<sp/>in<sp/>the<sp/>GUI,<sp/>which<sp/>determines</highlight></codeline>
<codeline lineno="877"><highlight class="comment">*<sp/>their<sp/>rendering<sp/>order.<sp/>Smaller<sp/>values<sp/>indicate<sp/>elements<sp/>that<sp/>should<sp/>be<sp/>rendered</highlight></codeline>
<codeline lineno="878"><highlight class="comment">*<sp/>closer<sp/>to<sp/>the<sp/>viewer,<sp/>and<sp/>have<sp/>a<sp/>higher<sp/>priority<sp/>over<sp/>other<sp/>UI<sp/>elements.</highlight></codeline>
<codeline lineno="879"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="shgui_8h_1abe9560f976468057080c78dedbbbba3b" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_TEXT_Z_PRIORITY<sp/><sp/><sp/>0.0001f</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="882"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="883"><highlight class="comment">*<sp/>@brief<sp/>The<sp/>z-priority<sp/>for<sp/>region<sp/>elements<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="884"><highlight class="comment">*</highlight></codeline>
<codeline lineno="885"><highlight class="comment">*<sp/>This<sp/>macro<sp/>defines<sp/>the<sp/>z-priority<sp/>for<sp/>region<sp/>elements<sp/>in<sp/>the<sp/>GUI,<sp/>which<sp/>determines</highlight></codeline>
<codeline lineno="886"><highlight class="comment">*<sp/>their<sp/>rendering<sp/>order.<sp/>Smaller<sp/>values<sp/>indicate<sp/>elements<sp/>that<sp/>should<sp/>be<sp/>rendered</highlight></codeline>
<codeline lineno="887"><highlight class="comment">*<sp/>closer<sp/>to<sp/>the<sp/>viewer,<sp/>and<sp/>have<sp/>a<sp/>higher<sp/>priority<sp/>over<sp/>other<sp/>UI<sp/>elements.</highlight></codeline>
<codeline lineno="888"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="shgui_8h_1a4024073423f80863499398090326fe37" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_REGION_Z_PRIORITY<sp/>0.0002f</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="891"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="892"><highlight class="comment">*<sp/>@brief<sp/>Z-axis<sp/>priority<sp/>value<sp/>for<sp/>out-of-canvas<sp/>`shgui`<sp/>elements.</highlight></codeline>
<codeline lineno="893"><highlight class="comment">*</highlight></codeline>
<codeline lineno="894"><highlight class="comment">*<sp/>This<sp/>constant<sp/>defines<sp/>the<sp/>Z-axis<sp/>priority<sp/>value<sp/>assigned<sp/>to<sp/>`shgui`<sp/>elements<sp/>that<sp/>are<sp/>positioned</highlight></codeline>
<codeline lineno="895"><highlight class="comment">*<sp/>outside<sp/>the<sp/>visible<sp/>canvas.<sp/>It<sp/>is<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>rendering<sp/>order<sp/>and<sp/>priority<sp/>for</highlight></codeline>
<codeline lineno="896"><highlight class="comment">*<sp/>elements<sp/>that<sp/>extend<sp/>beyond<sp/>the<sp/>canvas<sp/>boundaries<sp/>along<sp/>the<sp/>Z-axis.</highlight></codeline>
<codeline lineno="897"><highlight class="comment">*</highlight></codeline>
<codeline lineno="898"><highlight class="comment">*<sp/>The<sp/>higher<sp/>the<sp/>Z-axis<sp/>priority<sp/>value,<sp/>the<sp/>more<sp/>emphasis<sp/>will<sp/>be<sp/>given<sp/>to<sp/>rendering<sp/>these<sp/>out-of-canvas<sp/>elements.</highlight></codeline>
<codeline lineno="899"><highlight class="comment">*<sp/>Adjust<sp/>this<sp/>value<sp/>to<sp/>control<sp/>the<sp/>rendering<sp/>behavior<sp/>of<sp/>elements<sp/>positioned<sp/>outside<sp/>the<sp/>visible<sp/>canvas<sp/>along<sp/>the<sp/>Z-axis.</highlight></codeline>
<codeline lineno="900"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="shgui_8h_1a6b332f2d20ddd14e85853b5c4a7569d1" refkind="member"><highlight class="normal">#define<sp/>SH_GUI_OUT_OF_CANVAS_Z_PRIORITY<sp/>1.0f</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="905"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="906"><highlight class="comment">*<sp/>@brief<sp/>Links<sp/>the<sp/>inputs<sp/>to<sp/>the<sp/>@ref<sp/>ShGui<sp/>handle.</highlight></codeline>
<codeline lineno="907"><highlight class="comment">*</highlight></codeline>
<codeline lineno="908"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="909"><highlight class="comment">*<sp/>@param<sp/>p_window_width<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>window<sp/>width<sp/>variable.</highlight></codeline>
<codeline lineno="910"><highlight class="comment">*<sp/>@param<sp/>p_window_height<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>window<sp/>height<sp/>variable.</highlight></codeline>
<codeline lineno="911"><highlight class="comment">*<sp/>@param<sp/>p_cursor_pos_x<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>cursor<sp/>position<sp/>x<sp/>variable.</highlight></codeline>
<codeline lineno="912"><highlight class="comment">*<sp/>@param<sp/>p_cursor_pos_y<sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>cursor<sp/>position<sp/>y<sp/>variable.</highlight></codeline>
<codeline lineno="913"><highlight class="comment">*<sp/>@param<sp/>key_events<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>valid<sp/>of<sp/>@ref<sp/>ShGuiKeyEvents.</highlight></codeline>
<codeline lineno="914"><highlight class="comment">*<sp/>@param<sp/>p_delta_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>delta<sp/>time<sp/>variable.</highlight></codeline>
<codeline lineno="915"><highlight class="comment">*</highlight></codeline>
<codeline lineno="916"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="917"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918" refid="shgui_8h_1a9b1a4921e32015a39728451daf944b0e" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiLinkInputs(</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/><sp/><sp/><sp/><sp/><sp/>p_window_width,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/><sp/><sp/><sp/><sp/><sp/>p_window_height,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_cursor_pos_x,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>float*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_cursor_pos_y,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiKeyEvents<sp/>key_events,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiKeyEvents<sp/>last_key_events,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>double*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_delta_time</highlight></codeline>
<codeline lineno="927"><highlight class="normal">);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="929"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="930"><highlight class="comment">*<sp/>@brief<sp/>Resets<sp/>the<sp/>GUI<sp/>inputs.</highlight></codeline>
<codeline lineno="931"><highlight class="comment">*</highlight></codeline>
<codeline lineno="932"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="933"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="934"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="935"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936" refid="shgui_8h_1a8b3bc79cd9cb70483d361bba0c337615" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiResetInputs(</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="938"><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="940"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="941"><highlight class="comment">*<sp/>@brief<sp/>Updates<sp/>the<sp/>GUI<sp/>inputs.</highlight></codeline>
<codeline lineno="942"><highlight class="comment">*</highlight></codeline>
<codeline lineno="943"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="944"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="945"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="946"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="shgui_8h_1ab7eef3f9e147fd4102686d6317796abd" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiUpdateInputs(</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui</highlight></codeline>
<codeline lineno="949"><highlight class="normal">);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="951"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="952"><highlight class="comment">*<sp/>@brief<sp/>Scales<sp/>the<sp/>UI<sp/>of<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="953"><highlight class="comment">*</highlight></codeline>
<codeline lineno="954"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="955"><highlight class="comment">*<sp/>@param<sp/>region_scaling_factor<sp/><sp/><sp/><sp/>The<sp/>scaling<sp/>factor<sp/>for<sp/>regions.</highlight></codeline>
<codeline lineno="956"><highlight class="comment">*<sp/>@param<sp/>char_scaling_factor<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>scaling<sp/>factor<sp/>for<sp/>characters.</highlight></codeline>
<codeline lineno="957"><highlight class="comment">*</highlight></codeline>
<codeline lineno="958"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="959"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="shgui_8h_1a8f856bc2003792b4f495c4e06bb988ad" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiScaleUI(</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/>p_gui,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>float<sp/><sp/>region_scaling_factor,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>float<sp/><sp/>char_scaling_factor</highlight></codeline>
<codeline lineno="964"><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="966"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="967"><highlight class="comment">*<sp/>@brief<sp/>Creates<sp/>a<sp/>region<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="968"><highlight class="comment">*</highlight></codeline>
<codeline lineno="969"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="970"><highlight class="comment">*<sp/>@param<sp/>position_zero<sp/><sp/><sp/>The<sp/>position<sp/>of<sp/>region.</highlight></codeline>
<codeline lineno="971"><highlight class="comment">*<sp/>@param<sp/>scale_zero<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>scale<sp/>of<sp/>the<sp/>region,<sp/>in<sp/>pixels<sp/>or<sp/>relative<sp/>to<sp/>the<sp/>window<sp/>dimensions,<sp/>depending<sp/>on<sp/>the<sp/>`flags`<sp/>argument.</highlight></codeline>
<codeline lineno="972"><highlight class="comment">*<sp/>@param<sp/>fill_color_zero<sp/>The<sp/>fill<sp/>color<sp/>of<sp/>the<sp/>region.</highlight></codeline>
<codeline lineno="973"><highlight class="comment">*<sp/>@param<sp/>edge_color_zero<sp/>The<sp/>edge<sp/>color<sp/>of<sp/>the<sp/>region.</highlight></codeline>
<codeline lineno="974"><highlight class="comment">*<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags<sp/>for<sp/>creating<sp/>a<sp/>region.</highlight></codeline>
<codeline lineno="975"><highlight class="comment">*</highlight></codeline>
<codeline lineno="976"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="977"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="shgui_8h_1af689a8711e8b353a6fc8cda0c39097d6" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiRegion(</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>shguivec2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_zero,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>shguivec2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_zero,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>shguivec4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fill_color_zero,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>shguivec4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_fill_color_zero,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiWidgetFlags<sp/>flags</highlight></codeline>
<codeline lineno="985"><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="987"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="988"><highlight class="comment">*<sp/>@brief<sp/>Overwrites<sp/>a<sp/>region<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="989"><highlight class="comment">*</highlight></codeline>
<codeline lineno="990"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="991"><highlight class="comment">*<sp/>@param<sp/>region_idx<sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>region<sp/>to<sp/>overwrite.</highlight></codeline>
<codeline lineno="992"><highlight class="comment">*<sp/>@param<sp/>p_src_data<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>source<sp/>data<sp/>for<sp/>overwriting<sp/>the<sp/>region.</highlight></codeline>
<codeline lineno="993"><highlight class="comment">*<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags<sp/>for<sp/>overwriting<sp/>the<sp/>region,<sp/>see<sp/>@ref<sp/>ShGuiRegionRawWriteFlags.</highlight></codeline>
<codeline lineno="994"><highlight class="comment">*</highlight></codeline>
<codeline lineno="995"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="996"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997" refid="shgui_8h_1a9dd2b1117c70f24a1c9419d31e3a3851" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiOverwriteRegion(</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_idx,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiRegionRaw*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_src_data,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiRegionRawWriteFlags<sp/>flags</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1004"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1005"><highlight class="comment">*<sp/>@brief<sp/>Overwrites<sp/>multiple<sp/>regions<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1007"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="1008"><highlight class="comment">*<sp/>@param<sp/>first_region<sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>first<sp/>region<sp/>to<sp/>overwrite.</highlight></codeline>
<codeline lineno="1009"><highlight class="comment">*<sp/>@param<sp/>region_count<sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>regions<sp/>to<sp/>overwrite.</highlight></codeline>
<codeline lineno="1010"><highlight class="comment">*<sp/>@param<sp/>p_src_data<sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>source<sp/>data<sp/>for<sp/>overwriting<sp/>the<sp/>regions.</highlight></codeline>
<codeline lineno="1011"><highlight class="comment">*<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags<sp/>for<sp/>overwriting<sp/>the<sp/>regions.</highlight></codeline>
<codeline lineno="1012"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1013"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="1014"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="shgui_8h_1acc9092658461c25ba25153c8664f16c1" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiOverwriteRegions(</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_region,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_count,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiRegionRaw*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_src_data,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiRegionRawWriteFlags<sp/>flags</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1023"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1024"><highlight class="comment">*<sp/>@brief<sp/>Counts<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>a<sp/>string.</highlight></codeline>
<codeline lineno="1025"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1026"><highlight class="comment">*<sp/>@param<sp/>s_text<sp/><sp/><sp/><sp/><sp/>The<sp/>text<sp/>to<sp/>count<sp/>the<sp/>lines<sp/>of.</highlight></codeline>
<codeline lineno="1027"><highlight class="comment">*<sp/>@param<sp/>p_count<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>variable<sp/>to<sp/>store<sp/>the<sp/>line<sp/>count.</highlight></codeline>
<codeline lineno="1028"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1029"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="1030"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031" refid="shgui_8h_1a72ab2169348cbc3f4637b85bb2434df0" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiTextLineCount(</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>s_text,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t*<sp/>p_count</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1036"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1037"><highlight class="comment">*<sp/>@brief<sp/>Renders<sp/>text<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="1038"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1039"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="1040"><highlight class="comment">*<sp/>@param<sp/>position_zero<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>position<sp/>of<sp/>the<sp/>text<sp/>UI<sp/>in<sp/>the<sp/>window<sp/>canvas,<sp/>could<sp/>be<sp/>in<sp/>pixels<sp/>or<sp/>relative<sp/>to<sp/>the<sp/>window<sp/>dimensions,<sp/>depending<sp/>on<sp/>the<sp/>`flags`<sp/>argument.</highlight></codeline>
<codeline lineno="1041"><highlight class="comment">*<sp/>@param<sp/>fill_color_zero<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>color<sp/>of<sp/>the<sp/>text<sp/>characters.</highlight></codeline>
<codeline lineno="1042"><highlight class="comment">*<sp/>@param<sp/>scale_pixels_zero<sp/><sp/><sp/><sp/>The<sp/>scale<sp/>of<sp/>the<sp/>text<sp/>characters<sp/>in<sp/>pixels.</highlight></codeline>
<codeline lineno="1043"><highlight class="comment">*<sp/>@param<sp/>s_text<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Source<sp/>string<sp/>of<sp/>characters<sp/>to<sp/>render.</highlight></codeline>
<codeline lineno="1044"><highlight class="comment">*<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags<sp/>for<sp/>rendering<sp/>the<sp/>text,<sp/>see<sp/>@ref<sp/>ShGuiWidgetFlags.</highlight></codeline>
<codeline lineno="1045"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1046"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="1047"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048" refid="shgui_8h_1ae1e1b1e3ae2c8bfa4482f9a74b759033" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiText(</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>shguivec2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_zero,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>shguivec4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fill_color_zero,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>float<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_zero_pixels,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>char*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_text,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiWidgetFlags<sp/>flags</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1057"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1058"><highlight class="comment">*<sp/>@brief<sp/>Overwrites<sp/>a<sp/>character<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="1059"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1060"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="1061"><highlight class="comment">*<sp/>@param<sp/>char_idx<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>character<sp/>to<sp/>overwrite.</highlight></codeline>
<codeline lineno="1062"><highlight class="comment">*<sp/>@param<sp/>p_src_data<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>source<sp/>data<sp/>for<sp/>overwriting<sp/>the<sp/>character.</highlight></codeline>
<codeline lineno="1063"><highlight class="comment">*<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags<sp/>for<sp/>overwriting<sp/>the<sp/>character,<sp/>see<sp/>@ref<sp/>ShGuiCharRawWriteFlags.</highlight></codeline>
<codeline lineno="1064"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1065"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="1066"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067" refid="shgui_8h_1ac86454d2a0765c1a715829425bee38fc" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiOverwriteChar(</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_idx,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharRaw*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_src_data,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharRawWriteFlags<sp/>flags</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1074"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1075"><highlight class="comment">*<sp/>Overwrites<sp/>multiple<sp/>characters<sp/>in<sp/>the<sp/>GUI.</highlight></codeline>
<codeline lineno="1076"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1077"><highlight class="comment">*<sp/>@param<sp/>p_gui<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>valid<sp/>@ref<sp/>ShGui<sp/>structure.</highlight></codeline>
<codeline lineno="1078"><highlight class="comment">*<sp/>@param<sp/>first_char<sp/><sp/><sp/><sp/>The<sp/>index<sp/>of<sp/>the<sp/>first<sp/>character<sp/>to<sp/>overwrite.</highlight></codeline>
<codeline lineno="1079"><highlight class="comment">*<sp/>@param<sp/>char_count<sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>characters<sp/>to<sp/>overwrite.</highlight></codeline>
<codeline lineno="1080"><highlight class="comment">*<sp/>@param<sp/>p_src_data<sp/><sp/><sp/><sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>source<sp/>data<sp/>for<sp/>overwriting<sp/>the<sp/>characters.</highlight></codeline>
<codeline lineno="1081"><highlight class="comment">*<sp/>@param<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flags<sp/>for<sp/>overwriting<sp/>the<sp/>characters,<sp/>see<sp/>@ref<sp/>ShGuiCharRawWriteFlags.</highlight></codeline>
<codeline lineno="1082"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1083"><highlight class="comment">*<sp/>@return<sp/>The<sp/>result<sp/>of<sp/>the<sp/>function<sp/>call,<sp/>indicating<sp/>success<sp/>or<sp/>failure.</highlight></codeline>
<codeline lineno="1084"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085" refid="shgui_8h_1a40e55ab9107287ba86c7afbefc3cbfb6" refkind="member"><highlight class="normal">extern<sp/>uint8_t<sp/>SH_GUI_CALL<sp/>shGuiOverwriteChars(</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGui*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_gui,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_char,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_count,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharRaw*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_src_data,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>ShGuiCharRawWriteFlags<sp/>flags</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">#endif//__cplusplus</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal">#endif//SH_GUI_H</highlight></codeline>
    </programlisting>
    <location file="D:/home/desktop/github/shgui/shgui/include/shgui/shgui.h"/>
  </compounddef>
</doxygen>
